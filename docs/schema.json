{
    "swagger": "2.0",
    "info": {
        "version": "1.0.0",
        "title": "API rtb.cat"
    },
    "host": "api.adx1.com",
    "schemes": [
        "https",
        "http"
    ],
    "basePath": "/v1",
    "produces": [
        "application/json"
    ],
    "securityDefinitions": {
        "api_key": {
            "type": "apiKey",
            "name": "api_key",
            "in": "query"
        },
        "oauth": {
            "type": "oauth2",
            "flow": "password",
            "tokenUrl": "https://api.adx1.com/v1/auth",
            "scopes": {
                "access_token": "",
                "expires_in": "",
                "refresh_token": "",
                "token_type": ""
            }
        }
    },
    "security": [
        {
            "oauth": [
                "access_token",
                "expires_in",
                "refresh_token",
                "token_type"
            ]
        },
        {
            "api_key": []
        }
    ],
    "tags": [
        {
            "name": "campaigns",
            "description": "Everything about Campaigns"
        },
        {
            "name": "strategies",
            "description": "Everything about Strategy"
        },
        {
            "name": "creatives",
            "description": "Everything about Creatives"
        },
        {
            "name": "pixels",
            "description": "Everything about Pixels"
        },
        {
            "name": "deals",
            "description": "Everything about Deals"
        },
        {
            "name": "site lists",
            "description": "Everything about Site Lists"
        },
        {
            "name": "ip lists",
            "description": "Everything about Ip Lists"
        },
        {
            "name": "ssps",
            "description": "Everything about Ssps"
        },
        {
            "name": "data providers",
            "description": "Everything about Data Providers"
        },
        {
            "name": "contextual providers",
            "description": "Everything about Contextual"
        },
        {
            "name": "technologies",
            "description": "Everything about Technologies"
        },
        {
            "name": "carriers",
            "description": "Everything about Carriers"
        },
        {
            "name": "video player options",
            "description": "Everything about Video Options"
        },
        {
            "name": "constants",
            "description": "Everything about Constants"
        },
        {
            "name": "reports",
            "description": "Everything about Reports"
        },
        {
            "name": "locations",
            "description": "Everything about Locations"
        },
        {
            "name": "organizations",
            "description": "Everything about Organizations"
        },
        {
            "name": "users",
            "description": "Everything about Organizations"
        },
        {
            "name": "data imports",
            "description": "Everything about Data Imports"
        },
        {
            "name": "change history",
            "description": "Change history"
        }
    ],
    "paths": {
        "/campaigns": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "All Campaigns",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Campaigns"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Create Campaign",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created Campaign object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newCampaign"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Campaign",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Campaign",
                        "schema": {
                            "$ref": "#/definitions/Campaign"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Update Campaign",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated Campaign object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editCampaign"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Delete Campaign",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/checklist": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Check Status Campaigns",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check Status Campaigns",
                        "schema": {
                            "$ref": "#/definitions/CheckLists"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/flights": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "All Campaign Flights",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Flights"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Create Flight",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created Flight object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newFlight"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/flights/{flight_id}": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Flight",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "flight_id",
                        "in": "path",
                        "description": "The numerical ID of Flight",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Flight",
                        "schema": {
                            "$ref": "#/definitions/Flight"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Update Flight",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "flight_id",
                        "in": "path",
                        "description": "The numerical ID of Flight",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Updated Flight object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editFlight"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Delete Budget Flight",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "flight_id",
                        "in": "path",
                        "description": "The numerical ID of Flight",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/site_lists": {
            "get": {
                "tags": [
                    "campaigns"
                ],
                "summary": "All Campaign Site Lists",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Site_Lists"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "campaigns"
                ],
                "summary": "Add Site Lists to Campaign",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Site List IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "All Campaign Strategies",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Strategies"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "strategies"
                ],
                "summary": "Add Strategy To Campaign",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created Strategy object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newStrategy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Strategy",
                        "schema": {
                            "$ref": "#/definitions/Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Add Site Lists to Campaign",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Update Strategy",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editStrategy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "strategies"
                ],
                "summary": "Delete Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/checklist": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Check Status Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Check Status",
                        "schema": {
                            "$ref": "#/definitions/CheckLists"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/report_bids": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Report Bids Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Report Bids",
                        "schema": {
                            "$ref": "#/definitions/ReportBids"
                        }
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/creatives": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Creatives in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Include Creatives",
                        "schema": {
                            "$ref": "#/definitions/Creatives"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Add Creatives to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Creatives IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/ssps": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Ssp in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Include SSP",
                        "schema": {
                            "$ref": "#/definitions/Ssps"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Add Ssp to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Ssp IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/deals": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Deals in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Include Deal",
                        "schema": {
                            "$ref": "#/definitions/Deals"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Add Deals to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Deals IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/site_lists": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Site Lists in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Included Site Lists",
                        "schema": {
                            "$ref": "#/definitions/Site_Lists"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Add Site Lists to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Site List IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/ip_lists": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Ip Lists in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Included Ip Lists",
                        "schema": {
                            "$ref": "#/definitions/Ip_Lists"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Add Ip Lists to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Ip List IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/contextual_providers": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Contextual in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contextual In Strategy",
                        "schema": {
                            "$ref": "#/definitions/Contextual_Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Include and Exclude Contextual Segments to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Include and Exclude Contextual Segments IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Included_Excluded_IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/data_providers": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Data Providers in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data Providers In Strategy",
                        "schema": {
                            "$ref": "#/definitions/Data_Provider_Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Include and Exclude Data Providers to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Include and Exclude Data Providers IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Included_Excluded_IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/pixels": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Pixel in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pixel In Strategy",
                        "schema": {
                            "$ref": "#/definitions/Pixel_Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Include and Exclude Pixels to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Include and Exclude Pixels IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Included_Excluded_IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/dayparts": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Day Part in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pixel In Strategy",
                        "schema": {
                            "$ref": "#/definitions/DayParts"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Add Day Parts to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Add Day Parts array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/DayParts_Add_Strategy"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/locations": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Location in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Location In Strategy",
                        "schema": {
                            "$ref": "#/definitions/Location_Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Include and Exclude Locations to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Include and Exclude Locations IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Location_Included_Excluded"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/technologies/oss": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Os in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Technologies In Strategy",
                        "schema": {
                            "$ref": "#/definitions/Os_Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Include and Exclude Os to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Include and Exclude Os",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Os_Add"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/technologies/devices": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Devices in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Devices In Strategy",
                        "schema": {
                            "$ref": "#/definitions/Device_Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Include and Exclude Devices to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Include and Exclude Devices",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Device_Add"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/technologies/browsers": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Browsers in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Browsers In Strategy",
                        "schema": {
                            "$ref": "#/definitions/Browser_Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Include and Exclude Browsers to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Include and Exclude Browsers",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Browser_Add"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/technologies/connection_types": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Connection Types in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Connection Types In Strategy",
                        "schema": {
                            "$ref": "#/definitions/Connection_Type_Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Include and Exclude Connection Types to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Include and Exclude Connection Types",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Included_Excluded_IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/carriers": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Carriers in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Carriers In Strategy",
                        "schema": {
                            "$ref": "#/definitions/Carrier_Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Include and Exclude Carriers to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Include and Exclude Carriers Names array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Included_Excluded_Carriers"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/campaigns/{campaign_id}/strategies/{strategy_id}/video_player_options": {
            "get": {
                "tags": [
                    "strategies"
                ],
                "summary": "Video Options in Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video In Strategy",
                        "schema": {
                            "$ref": "#/definitions/Video_Strategy"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "strategies"
                ],
                "summary": "Include and Exclude Video to Strategy",
                "parameters": [
                    {
                        "name": "campaign_id",
                        "in": "path",
                        "description": "The numerical ID of Campaign",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "strategy_id",
                        "in": "path",
                        "description": "The numerical ID of Strategy",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Include and Exclude Video IDs array",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Included_Excluded_IDS"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/pixels": {
            "get": {
                "tags": [
                    "pixels"
                ],
                "summary": "All Pixels",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Pixels"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "pixels"
                ],
                "summary": "Create Pixel",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created Pixel",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newPixel"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/pixels/{pixel_id}": {
            "get": {
                "tags": [
                    "pixels"
                ],
                "summary": "Pixel",
                "parameters": [
                    {
                        "name": "pixel_id",
                        "in": "path",
                        "description": "The numerical ID of Pixel",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Pixel",
                        "schema": {
                            "$ref": "#/definitions/Pixel"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "pixels"
                ],
                "summary": "Update Pixel",
                "parameters": [
                    {
                        "name": "pixel_id",
                        "in": "path",
                        "description": "The numerical ID of Pixel",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated Pixel object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editPixel"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "pixels"
                ],
                "summary": "Delete Pixel",
                "parameters": [
                    {
                        "name": "pixel_id",
                        "in": "path",
                        "description": "The numerical ID of Pixel",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/deals": {
            "get": {
                "tags": [
                    "deals"
                ],
                "summary": "All Deals",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Deals"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "deals"
                ],
                "summary": "Create Deal",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Create Deal",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newDeal"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/deals/{deal_id}": {
            "get": {
                "tags": [
                    "deals"
                ],
                "summary": "Deal",
                "parameters": [
                    {
                        "name": "deal_id",
                        "in": "path",
                        "description": "The numerical ID of Pixel",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deal",
                        "schema": {
                            "$ref": "#/definitions/Deal"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "deals"
                ],
                "summary": "Update Deal",
                "parameters": [
                    {
                        "name": "deal_id",
                        "in": "path",
                        "description": "The numerical ID of Deal",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated Deal object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editDeal"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/site_lists": {
            "get": {
                "tags": [
                    "site lists"
                ],
                "summary": "All Site Lists",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Site_Lists"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "site lists"
                ],
                "summary": "Create Site List",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Site List Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "formData",
                        "description": "User ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "Site List status",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "relation_type",
                        "in": "formData",
                        "description": "Site List type",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "file_name",
                        "in": "formData",
                        "description": "Site List to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/site_lists/{site_list_id}": {
            "get": {
                "tags": [
                    "site lists"
                ],
                "summary": "Site List",
                "parameters": [
                    {
                        "name": "site_list_id",
                        "in": "path",
                        "description": "The numerical ID of Site List",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Site List",
                        "schema": {
                            "$ref": "#/definitions/Site_List"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "site lists"
                ],
                "summary": "Update Site List",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "site_list_id",
                        "in": "path",
                        "description": "The numerical ID of Site List",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Site List Name",
                        "type": "string"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "Site List status",
                        "type": "number"
                    },
                    {
                        "name": "relation_type",
                        "in": "formData",
                        "description": "Site List type",
                        "type": "number"
                    },
                    {
                        "name": "file_name",
                        "in": "formData",
                        "description": "Site List to upload",
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "site lists"
                ],
                "summary": "Delete Site List",
                "parameters": [
                    {
                        "name": "site_list_id",
                        "in": "path",
                        "description": "The numerical ID of Site List",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/site_lists/{site_list_id}/sites": {
            "get": {
                "tags": [
                    "site lists"
                ],
                "summary": "Sites in Site List",
                "parameters": [
                    {
                        "name": "site_list_id",
                        "in": "path",
                        "description": "The numerical ID of Site List",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Site List",
                        "schema": {
                            "$ref": "#/definitions/Sites"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "site lists"
                ],
                "summary": "Add Site to Site List",
                "parameters": [
                    {
                        "name": "site_list_id",
                        "in": "path",
                        "description": "The numerical ID of Site List",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Add Site to Site List",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Site"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "site lists"
                ],
                "summary": "Delete Site in Site List",
                "parameters": [
                    {
                        "name": "site_list_id",
                        "in": "path",
                        "description": "The numerical ID of Site List",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Delete Site in Site List",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/Site"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ip_lists": {
            "get": {
                "tags": [
                    "ip lists"
                ],
                "summary": "All Ip Lists",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Ip_Lists"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ip lists"
                ],
                "summary": "Create Ip List",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Ip List Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "formData",
                        "description": "User ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "Ip List status",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "relation_type",
                        "in": "formData",
                        "description": "Ip List type",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "file_name",
                        "in": "formData",
                        "description": "Ip List to upload",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ip_lists/{ip_list_id}": {
            "get": {
                "tags": [
                    "ip lists"
                ],
                "summary": "Ip List",
                "parameters": [
                    {
                        "name": "ip_list_id",
                        "in": "path",
                        "description": "The numerical ID of Ip List",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ip List",
                        "schema": {
                            "$ref": "#/definitions/Ip_List"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ip lists"
                ],
                "summary": "Update Ip List",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "ip_list_id",
                        "in": "path",
                        "description": "The numerical ID of Ip List",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Ip List Name",
                        "type": "string"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "Ip List status",
                        "type": "number"
                    },
                    {
                        "name": "relation_type",
                        "in": "formData",
                        "description": "Ip List type",
                        "type": "number"
                    },
                    {
                        "name": "file_name",
                        "in": "formData",
                        "description": "Ip List to upload",
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ip lists"
                ],
                "summary": "Delete Ip List",
                "parameters": [
                    {
                        "name": "ip_list_id",
                        "in": "path",
                        "description": "The numerical ID of Ip List",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ip_lists/{ip_list_id}/ips": {
            "get": {
                "tags": [
                    "ip lists"
                ],
                "summary": "IPs in Ip List",
                "parameters": [
                    {
                        "name": "ip_list_id",
                        "in": "path",
                        "description": "The numerical ID of Ip List",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ip List",
                        "schema": {
                            "$ref": "#/definitions/IPs"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ip lists"
                ],
                "summary": "Add IP to Ip List",
                "parameters": [
                    {
                        "name": "ip_list_id",
                        "in": "path",
                        "description": "The numerical ID of Ip List",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Add IP to Ip List",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IPs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ip lists"
                ],
                "summary": "Delete IP in Ip List",
                "parameters": [
                    {
                        "name": "ip_list_id",
                        "in": "path",
                        "description": "The numerical ID of Ip List",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Delete IP in Ip List",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/IPs"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/native": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "All Native Creatives",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Creatives_Native"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "creatives"
                ],
                "summary": "Create a new Native Creative",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Creative Name",
                        "required": true,
                        "type": "string",
                        "minimum": 1,
                        "maximum": 255
                    },
                    {
                        "name": "user_id",
                        "in": "formData",
                        "description": "User ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "iab_attr[]",
                        "in": "formData",
                        "description": "Creative Attributes",
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "call_to_action",
                        "in": "formData",
                        "description": "Call To Action",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "headline",
                        "in": "formData",
                        "description": "Headline",
                        "required": true,
                        "type": "string",
                        "maximum": 65
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Description",
                        "required": true,
                        "type": "string",
                        "maximum": 255
                    },
                    {
                        "name": "brand_name",
                        "in": "formData",
                        "description": "Brand Name",
                        "required": true,
                        "type": "string",
                        "maximum": 64
                    },
                    {
                        "name": "adomain",
                        "in": "formData",
                        "description": "Advertiser domain",
                        "required": true,
                        "type": "string",
                        "maximum": 65
                    },
                    {
                        "name": "destination_url",
                        "in": "formData",
                        "description": "Click-through URL. For example http://example.com",
                        "required": true,
                        "type": "string",
                        "maximum": 4096
                    },
                    {
                        "name": "macros_custom_data",
                        "in": "formData",
                        "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                        "maxLength": 500,
                        "type": "string"
                    },
                    {
                        "name": "image_attachment",
                        "in": "formData",
                        "description": "Image to upload. Only '.png, .jpg, .jpeg' is allowed",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "image_attachment_logo",
                        "in": "formData",
                        "description": "Logo Image to upload. Only '.png, .jpg, .jpeg' is allowed",
                        "required": true,
                        "type": "file"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/native/{creative_id}": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "Native Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Native Creative",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Native Creative",
                        "schema": {
                            "$ref": "#/definitions/Creative_Native"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "creatives"
                ],
                "summary": "Update a Native Creative",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Creative Name",
                        "type": "string",
                        "maximum": 255
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                        "type": "number"
                    },
                    {
                        "name": "iab_attr[]",
                        "in": "formData",
                        "description": "Creative Attributes",
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "call_to_action",
                        "in": "formData",
                        "description": "Call To Action",
                        "type": "number"
                    },
                    {
                        "name": "headline",
                        "in": "formData",
                        "description": "Headline",
                        "type": "string",
                        "maximum": 65
                    },
                    {
                        "name": "description",
                        "in": "formData",
                        "description": "Description",
                        "type": "string",
                        "maximum": 255
                    },
                    {
                        "name": "brand_name",
                        "in": "formData",
                        "description": "Brand Name",
                        "type": "string",
                        "maximum": 64
                    },
                    {
                        "name": "destination_url",
                        "in": "formData",
                        "description": "Click-through URL",
                        "type": "string",
                        "maximum": 4096
                    },
                    {
                        "name": "macros_custom_data",
                        "in": "formData",
                        "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                        "maxLength": 500,
                        "type": "string"
                    },
                    {
                        "name": "image_attachment",
                        "in": "formData",
                        "description": "Image to upload. Only '.png, .jpg, .jpeg' is allowed",
                        "type": "file"
                    },
                    {
                        "name": "image_attachment_logo",
                        "in": "formData",
                        "description": "Logo Image to upload. Only '.png, .jpg, .jpeg' is allowed",
                        "type": "file"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "creatives"
                ],
                "summary": "Delete Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/display/1pas": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "All 1PAS Display Creatives",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Creatives_Display_1pas"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "creatives"
                ],
                "summary": "Create a new Display 1pas Creative",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Creative Name",
                        "required": true,
                        "type": "string",
                        "minimum": 1,
                        "maximum": 255
                    },
                    {
                        "name": "user_id",
                        "in": "formData",
                        "description": "User ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "iab_attr[]",
                        "in": "formData",
                        "description": "Creative Attributes",
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "image_attachment",
                        "in": "formData",
                        "description": "Image to upload. Only '.gif, .png, .jpg, .jpeg' is allowed",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "adomain",
                        "in": "formData",
                        "description": "Advertiser Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "size",
                        "in": "formData",
                        "description": "Dimension",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "display_width",
                        "in": "formData",
                        "description": "Display Width. if size = 0 - Required.",
                        "type": "number",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    {
                        "name": "display_height",
                        "in": "formData",
                        "description": "Display Height. if size = 0 - Required.",
                        "type": "number",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    {
                        "name": "destination_url",
                        "in": "formData",
                        "description": "Click-through URL",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "macros_custom_data",
                        "in": "formData",
                        "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                        "maxLength": 500,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/display/1pas/{creative_id}": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "1PAS Display Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "1PAS Display Creative",
                        "schema": {
                            "$ref": "#/definitions/Creative_Display_1pas"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "creatives"
                ],
                "summary": "Update a Display 1pas Creative",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Creative Name",
                        "type": "string"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                        "type": "number"
                    },
                    {
                        "name": "iab_attr[]",
                        "in": "formData",
                        "description": "Creative Attributes",
                        "type": "array",
                        "items": {
                            "type": "number"
                        },
                        "collectionFormat": "multi"
                    },
                    {
                        "name": "image_attachment",
                        "in": "formData",
                        "description": "Image to upload. Only '.gif, .png, .jpg, .jpeg' is allowed",
                        "type": "file"
                    },
                    {
                        "name": "size",
                        "in": "formData",
                        "description": "Dimension",
                        "type": "number"
                    },
                    {
                        "name": "display_width",
                        "in": "formData",
                        "description": "Display Width. if size = 0 - Required.",
                        "type": "number",
                        "minimum": 1,
                        "maximum": 10000
                    },
                    {
                        "name": "display_height",
                        "in": "formData",
                        "description": "Display Height. if size = 0 - Required.",
                        "type": "number"
                    },
                    {
                        "name": "destination_url",
                        "in": "formData",
                        "description": "Click-through URL",
                        "type": "string"
                    },
                    {
                        "name": "macros_custom_data",
                        "in": "formData",
                        "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                        "maxLength": 500,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "creatives"
                ],
                "summary": "Delete Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/display/3pas": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "All 3PAS Display Creatives",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Creatives_Display_3pas"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "creatives"
                ],
                "summary": "Create 3PAS Display Creative",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created 3PAS Display Creative object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newCreative_Display_3pas"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/display/3pas/{creative_id}": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "3PAS Display Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "3PAS Display Creative",
                        "schema": {
                            "$ref": "#/definitions/Creative_Display_3pas"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "creatives"
                ],
                "summary": "Update 3PAS Display Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated 3PAS Display Creative object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editCreative_Display_3pas"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "creatives"
                ],
                "summary": "Delete Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/video/1pas": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "All 1PAS Video Creatives",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Creatives_Video_1pas"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "creatives"
                ],
                "summary": "Create a new Video 1pas Creative",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Creative Name",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "user_id",
                        "in": "formData",
                        "description": "User ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "video_attachment",
                        "in": "formData",
                        "description": "Video to upload. Only '.flv, .mp4, .avi, .wmv, .mov' is allowed",
                        "required": true,
                        "type": "file"
                    },
                    {
                        "name": "adomain",
                        "in": "formData",
                        "description": "Advertiser Domain",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "macros_custom_data",
                        "in": "formData",
                        "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                        "maxLength": 500,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/video/1pas/{creative_id}": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "1PAS Video Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "1PAS Video Creative",
                        "schema": {
                            "$ref": "#/definitions/Creative_Video_1pas"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "creatives"
                ],
                "summary": "Update a Video 1pas Creative",
                "consumes": [
                    "multipart/form-data"
                ],
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "name",
                        "in": "formData",
                        "description": "Creative Name",
                        "type": "string"
                    },
                    {
                        "name": "active",
                        "in": "formData",
                        "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                        "type": "number"
                    },
                    {
                        "name": "video_attachment",
                        "in": "formData",
                        "description": "Video to upload. Only '.flv, .mp4, .avi, .wmv, .mov' is allowed",
                        "type": "file"
                    },
                    {
                        "name": "macros_custom_data",
                        "in": "formData",
                        "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                        "maxLength": 500,
                        "type": "string"
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "creatives"
                ],
                "summary": "Delete Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/video/3pas": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "All 3PAS Video Creatives",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Creatives_Video_3pas"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "creatives"
                ],
                "summary": "Create 3PAS Video Creative",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created 3PAS Video Creative object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newCreative_Video_3pas"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/video/3pas/{creative_id}": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "3PAS Video Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "3PAS Video Creative",
                        "schema": {
                            "$ref": "#/definitions/Creative_Video_3pas"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "creatives"
                ],
                "summary": "Update 3PAS Video Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated 3PAS Video Creative object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editCreative_Video_3pas"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "creatives"
                ],
                "summary": "Delete Creative",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/{creative_id}/trackers": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "Get All Creative Event Trackers",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/EventTrackers"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "creatives"
                ],
                "summary": "Add Event Tracker",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created Event Tracker object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newEventTracker"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/creatives/{creative_id}/trackers/{tracker_id}": {
            "get": {
                "tags": [
                    "creatives"
                ],
                "summary": "Get Event Tracker",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "tracker_id",
                        "in": "path",
                        "description": "The numerical ID of Event Tracker",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event Tracker",
                        "schema": {
                            "$ref": "#/definitions/EventTracker"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "creatives"
                ],
                "summary": "Update Event Tracker",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "tracker_id",
                        "in": "path",
                        "description": "The numerical ID of Event Tracker",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Updated Event Tracker object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editEventTracker"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "creatives"
                ],
                "summary": "Delete Event Tracker",
                "parameters": [
                    {
                        "name": "creative_id",
                        "in": "path",
                        "description": "The numerical ID of Creative",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "tracker_id",
                        "in": "path",
                        "description": "The numerical ID of Event Tracker",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ssps": {
            "get": {
                "tags": [
                    "ssps"
                ],
                "summary": "All Ssp. Only For Admins",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "advertiser_id",
                        "in": "query",
                        "description": "Advertiser ID",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Ssps"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "ssps"
                ],
                "summary": "Create Ssp",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created Ssp",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newSsp"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/ssps/{ssp_id}": {
            "get": {
                "tags": [
                    "ssps"
                ],
                "summary": "Ssp. Only For Admins",
                "parameters": [
                    {
                        "name": "ssp_id",
                        "in": "path",
                        "description": "The numerical ID of Ip List",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Ssp",
                        "schema": {
                            "$ref": "#/definitions/Ssp"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "ssps"
                ],
                "summary": "Update Ssp",
                "parameters": [
                    {
                        "name": "ssp_id",
                        "in": "path",
                        "description": "The numerical ID of Ssp",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated Ssp object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editSsp"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "ssps"
                ],
                "summary": "Delete Ssp",
                "parameters": [
                    {
                        "name": "ssp_id",
                        "in": "path",
                        "description": "The numerical ID of Ssp",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/data_providers": {
            "get": {
                "tags": [
                    "data providers"
                ],
                "summary": "All Data Providers",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Data_Providers"
                        }
                    }
                }
            }
        },
        "/data_providers/{data_provider_id}": {
            "get": {
                "tags": [
                    "data providers"
                ],
                "summary": "Data Provider",
                "parameters": [
                    {
                        "name": "data_provider_id",
                        "in": "path",
                        "description": "The numerical ID of Data Provider",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data Provider",
                        "schema": {
                            "$ref": "#/definitions/Data_Provider"
                        }
                    }
                }
            }
        },
        "/contextual_providers": {
            "get": {
                "tags": [
                    "contextual providers"
                ],
                "summary": "All Contextual",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Contextuals"
                        }
                    }
                }
            }
        },
        "/contextual_providers/{contextual_provider_id}": {
            "get": {
                "tags": [
                    "contextual providers"
                ],
                "summary": "Contextual",
                "parameters": [
                    {
                        "name": "contextual_provider_id",
                        "in": "path",
                        "description": "The numerical ID of Contextual Provider",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Contextual",
                        "schema": {
                            "$ref": "#/definitions/Contextual"
                        }
                    }
                }
            }
        },
        "/technologies/oss": {
            "get": {
                "tags": [
                    "technologies"
                ],
                "summary": "Os",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Oss"
                        }
                    }
                }
            }
        },
        "/technologies/browsers": {
            "get": {
                "tags": [
                    "technologies"
                ],
                "summary": "Browsers",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Browsers"
                        }
                    }
                }
            }
        },
        "/technologies/devices": {
            "get": {
                "tags": [
                    "technologies"
                ],
                "summary": "Devises",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Devices"
                        }
                    }
                }
            }
        },
        "/technologies/connection_types": {
            "get": {
                "tags": [
                    "technologies"
                ],
                "summary": "Connection Types",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Connection_Types"
                        }
                    }
                }
            }
        },
        "/carriers": {
            "get": {
                "tags": [
                    "carriers"
                ],
                "summary": "All Carriers",
                "parameters": [
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Search name Carriers",
                        "type": "string",
                        "minLength": 3
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Carriers"
                        }
                    }
                }
            }
        },
        "/video_player_options": {
            "get": {
                "tags": [
                    "video player options"
                ],
                "summary": "All Video",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Video_Lists"
                        }
                    }
                }
            }
        },
        "/video_player_options/{video_option_id}": {
            "get": {
                "tags": [
                    "video player options"
                ],
                "summary": "Video Option",
                "parameters": [
                    {
                        "name": "video_option_id",
                        "in": "path",
                        "description": "The numerical ID of Video",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Video",
                        "schema": {
                            "$ref": "#/definitions/Video"
                        }
                    }
                }
            }
        },
        "/constants": {
            "get": {
                "tags": [
                    "constants"
                ],
                "summary": "Constants For Interface",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Constants"
                        }
                    }
                }
            }
        },
        "/reports": {
            "get": {
                "tags": [
                    "reports"
                ],
                "summary": "Reports",
                "parameters": [
                    {
                        "name": "segment",
                        "in": "query",
                        "description": "Name segment",
                        "required": true,
                        "type": "string"
                    },
                    {
                        "name": "from",
                        "in": "query",
                        "description": "From date",
                        "required": true,
                        "type": "string",
                        "pattern": "(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))"
                    },
                    {
                        "name": "to",
                        "in": "query",
                        "description": "To date",
                        "required": true,
                        "type": "string",
                        "pattern": "(?:19|20)[0-9]{2}-(?:(?:0[1-9]|1[0-2])-(?:0[1-9]|1[0-9]|2[0-9])|(?:(?!02)(?:0[1-9]|1[0-2])-(?:30))|(?:(?:0[13578]|1[02])-31))"
                    },
                    {
                        "name": "columns",
                        "in": "query",
                        "description": "Columns to search",
                        "required": true,
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    },
                    {
                        "name": "filters",
                        "in": "query",
                        "description": "Filters",
                        "type": "array",
                        "items": {
                            "type": "string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Reports"
                        }
                    }
                }
            }
        },
        "/reports/dimensions": {
            "get": {
                "tags": [
                    "reports"
                ],
                "summary": "Dimensions For Reports",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Dimensions"
                        }
                    }
                }
            }
        },
        "/reports/columns": {
            "get": {
                "tags": [
                    "reports"
                ],
                "summary": "Columns For Reports",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Columns"
                        }
                    }
                }
            }
        },
        "/locations/geo": {
            "get": {
                "tags": [
                    "locations"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search By Name",
                        "type": "string"
                    }
                ],
                "summary": "Countries",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Geo"
                        }
                    }
                }
            }
        },
        "/locations/countries": {
            "get": {
                "tags": [
                    "locations"
                ],
                "parameters": [
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search By Name",
                        "type": "string"
                    }
                ],
                "summary": "Countries",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Countries"
                        }
                    }
                }
            }
        },
        "/locations/countries/{country_id}": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Country",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Country"
                        }
                    }
                }
            }
        },
        "/locations/countries/{country_id}/regions": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Regions",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search By Name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Regions"
                        }
                    }
                }
            }
        },
        "/locations/countries/{country_id}/regions/{region_id}": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Region",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "region_id",
                        "in": "path",
                        "description": "Region ID",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Region"
                        }
                    }
                }
            }
        },
        "/locations/countries/{country_id}/regions/{region_id}/cities": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Cities",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "region_id",
                        "in": "path",
                        "description": "Region ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "search",
                        "in": "query",
                        "description": "Search By Name",
                        "type": "string"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Cities"
                        }
                    }
                }
            }
        },
        "/locations/countries/{country_id}/regions/{region_id}/cities/{city_id}": {
            "get": {
                "tags": [
                    "locations"
                ],
                "summary": "Cities",
                "parameters": [
                    {
                        "name": "country_id",
                        "in": "path",
                        "description": "Country ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "region_id",
                        "in": "path",
                        "description": "Region ID",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "city_id",
                        "in": "path",
                        "description": "City ID",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Cities"
                        }
                    }
                }
            }
        },
        "/organizations": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "summary": "Organizations. Only for Root.",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Organizations"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Organization. Only For Root.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created Organization. Only For Root.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newOrganization"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/organizations/{organization_id}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "The numerical ID of Organization",
                        "required": true,
                        "type": "number"
                    }
                ],
                "summary": "Organization. Only for Admins.",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Organization"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Organization. Only for Root.",
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "The numerical ID of Organization",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated Organization object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newOrganization"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/organizations/{organization_id}/agencies": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "The numerical ID of Organization",
                        "required": true,
                        "type": "number"
                    }
                ],
                "summary": "Organization agencies.",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Agencies"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Agency.",
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "The numerical ID of Organization",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created Agency.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newAgency"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/organizations/{organization_id}/agencies/{agency_id}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "The numerical ID of Organization",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "agency_id",
                        "in": "path",
                        "description": "The numerical ID of Agency",
                        "required": true,
                        "type": "number"
                    }
                ],
                "summary": "Agency.",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Agency"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Agency.",
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "The numerical ID of Organization",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "agency_id",
                        "in": "path",
                        "description": "The numerical ID of Agency",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated Organization object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newAgency"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/organizations/{organization_id}/agencies/{agency_id}/advertisers": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "The numerical ID of Organization",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "agency_id",
                        "in": "path",
                        "description": "The numerical ID of Agency",
                        "required": true,
                        "type": "number"
                    }
                ],
                "summary": "Advertisers.",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Advertisers"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "organizations"
                ],
                "summary": "Create Advertiser.",
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "The numerical ID of Organization",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "agency_id",
                        "in": "path",
                        "description": "The numerical ID of Agency",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created Advertiser.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newAdvertiser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/organizations/{organization_id}/agencies/{agency_id}/advertisers/{advertiser_id}": {
            "get": {
                "tags": [
                    "organizations"
                ],
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "The numerical ID of Organization",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "agency_id",
                        "in": "path",
                        "description": "The numerical ID of Agency",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "advertiser_id",
                        "in": "path",
                        "description": "The numerical ID of Advertiser",
                        "required": true,
                        "type": "number"
                    }
                ],
                "summary": "Advertisers.",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Advertiser"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "organizations"
                ],
                "summary": "Update Advertiser.",
                "parameters": [
                    {
                        "name": "organization_id",
                        "in": "path",
                        "description": "The numerical ID of Organization",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "agency_id",
                        "in": "path",
                        "description": "The numerical ID of Agency",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "advertiser_id",
                        "in": "path",
                        "description": "The numerical ID of Advertiser",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Updated Advertiser object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newAdvertiser"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
         "/organizations/{organization_id}/agencies/{agency_id}/advertisers/{advertiser_id}/ssps": {
            "get": {
                    "tags": [
                        "organizations"
                    ],
                    "summary": "Advertiser Locked SSP. Only For Admins.",
                    "parameters": [
                        {
                            "name": "organization_id",
                            "in": "path",
                            "description": "The numerical ID of Organization",
                            "required": true,
                            "type": "number"
                        },
                        {
                            "name": "agency_id",
                            "in": "path",
                            "description": "The numerical ID of Agency",
                            "required": true,
                            "type": "number"
                        },
                        {
                            "name": "advertiser_id",
                            "in": "path",
                            "description": "The numerical ID of Advertiser",
                            "required": true,
                            "type": "number"
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "Locked SSP",
                            "schema": {
                                "$ref": "#/definitions/IDS"
                            }
                        }
                    }
                },
                "put": {
                    "tags": [
                        "organizations"
                    ],
                    "summary": "Update Advertiser Locked SSP. Only For Admins.",
                    "parameters": [
                        {
                            "name": "organization_id",
                            "in": "path",
                            "description": "The numerical ID of Organization",
                            "required": true,
                            "type": "number"
                        },
                        {
                            "name": "agency_id",
                            "in": "path",
                            "description": "The numerical ID of Agency",
                            "required": true,
                            "type": "number"
                        },
                        {
                            "name": "advertiser_id",
                            "in": "path",
                            "description": "The numerical ID of Advertiser",
                            "required": true,
                            "type": "number"
                        },
                        {
                            "in": "body",
                            "name": "body",
                            "description": "Updated SSP object",
                            "required": true,
                            "schema": {
                                "$ref": "#/definitions/IDS"
                            }
                        }
                    ],
                    "responses": {
                        "200": {
                            "description": "successful operation"
                        }
                    }
                }
         },
        "/users": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get All Users",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Users"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "users"
                ],
                "summary": "Create User.",
                "parameters": [
                    {
                        "in": "body",
                        "name": "body",
                        "description": "Created Advertiser.",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/users/{user_id}": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get User",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The numerical ID of Users",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User",
                        "schema": {
                            "$ref": "#/definitions/User"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "users"
                ],
                "summary": "Update User",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The numerical ID of User",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Updated User object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editUser"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/users/{user_id}/permissions": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get User Permissions",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The numerical ID of Users",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Permission",
                        "schema": {
                            "$ref": "#/definitions/Permissions"
                        }
                    }
                }
            }
        },
        "/users/{user_id}/resources": {
            "get": {
                "tags": [
                    "users"
                ],
                "summary": "Get User Resources",
                "parameters": [
                    {
                        "name": "user_id",
                        "in": "path",
                        "description": "The numerical ID of Users",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Resources",
                        "schema": {
                            "$ref": "#/definitions/Resources"
                        }
                    }
                }
            }
        },
        "/data_imports": {
            "get": {
                "tags": [
                    "data imports"
                ],
                "summary": "Get All Data Imports",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/DataImports"
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "data imports"
                ],
                "summary": "Add Data Import",
                "parameters": [
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Created Data Import object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/newDataImport"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/data_imports/{data_import_id}": {
            "get": {
                "tags": [
                    "data imports"
                ],
                "summary": "Get Data Import",
                "parameters": [
                    {
                        "name": "data_import_id",
                        "in": "path",
                        "description": "The numerical ID of Data Import",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Data Import",
                        "schema": {
                            "$ref": "#/definitions/DataImport"
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "data imports"
                ],
                "summary": "Update Data Import",
                "parameters": [
                    {
                        "name": "data_import_id",
                        "in": "path",
                        "description": "The numerical ID of Data Import",
                        "required": true,
                        "type": "number"
                    },
                    {
                        "name": "body",
                        "in": "body",
                        "description": "Updated Data Import object",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/editDataImport"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            },
            "delete": {
                "tags": [
                    "data imports"
                ],
                "summary": "Delete Data Import",
                "parameters": [
                    {
                        "name": "data_import_id",
                        "in": "path",
                        "description": "The numerical ID of Data Import",
                        "required": true,
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "successful operation"
                    }
                }
            }
        },
        "/change_history": {
            "get": {
                "tags": [
                    "change history"
                ],
                "summary": "Get Change History",
                "parameters": [
                    {
                        "name": "limit",
                        "in": "query",
                        "description": "Limit",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "offset",
                        "in": "query",
                        "description": "Offset",
                        "type": "string",
                        "required": true
                    },
                    {
                        "name": "user_id",
                        "in": "query",
                        "description": "User ID",
                        "type": "number"
                    },
                    {
                        "name": "action",
                        "in": "query",
                        "description": "Action: CREATE, SET, CHANGE, DELETE",
                        "type": "string"
                    },
                    {
                        "name": "object",
                        "in": "query",
                        "description": "Object name",
                        "type": "string"
                    },
                    {
                        "name": "object_id",
                        "in": "query",
                        "description": "Object ID",
                        "type": "number"
                    },
                    {
                        "name": "parent",
                        "in": "query",
                        "description": "Parent object name",
                        "type": "string"
                    },
                    {
                        "name": "parent_id",
                        "in": "query",
                        "description": "Parent object ID",
                        "type": "number"
                    },
                    {
                        "name": "browser",
                        "in": "query",
                        "description": "Browser: Chrome, Firefox, IE, Opera, Safari, Unknown",
                        "type": "string"
                    },
                    {
                        "name": "os",
                        "in": "query",
                        "description": "Operating system: Android, Linux, OS X, Windows, Windows Phone, iOS, Unknown",
                        "type": "number"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/Changes"
                        }
                    }
                }
            }
        },
        "/change_history/objects": {
            "get": {
                "tags": [
                    "change history"
                ],
                "summary": "Get Change History Objects List",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/HistoryObjects"
                        }
                    }
                }
            }
        },
        "/change_history/parents": {
            "get": {
                "tags": [
                    "change history"
                ],
                "summary": "Get Change History Parents List",
                "responses": {
                    "200": {
                        "description": "Successful response",
                        "schema": {
                            "$ref": "#/definitions/HistoryObjects"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "Campaigns": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Campaign"
                    }
                }
            }
        },
        "Campaign": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Don't use for Create or Update."
                },
                "name": {
                    "type": "string",
                    "description": "Name. Required.",
                    "minimum": 1,
                    "maximum": 255
                },
                "user_id": {
                    "type": "number",
                    "description": "Advertiser. Required."
                },
                "iab_category": {
                    "type": "array",
                    "description": "IAB Category. Required. ID values of parameter `iab_categories` in /constants is added to this parameter.",
                    "items": {
                        "type": "string"
                    }
                },
                "time_zone": {
                    "type": "number",
                    "description": "Time Zone. Required. One of the ID values of parameter `time_zones` in /constants is added to this parameter."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "is_unlimited_budget": {
                    "type": "number",
                    "description": "Budget Flights. 1 - Unlimited, 0 - Use Flights. Required.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "daily_budget_is_unlimited": {
                    "type": "number",
                    "description": "Daily Spend Cap. 1 - Unlimited, 0 - Use daily_budget. Required",
                    "enum": [
                        1,
                        0
                    ]
                },
                "daily_budget": {
                    "type": "number",
                    "pattern": "/\\d+(\\.\\d{0,})?/",
                    "minimum": 0.01,
                    "description": "If daily_budget_is_unlimited = 0 - Required."
                },
                "frequency_cap": {
                    "type": "number",
                    "description": "Required.",
                    "minimum": 0
                },
                "frequency_cap_type": {
                    "type": "number",
                    "description": "Conversion Event Pixel. If frequency_cap > 0 - Required. One of the ID values of parameter `frequency_cap_types` in /constants is added to this parameter.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "frequency_cap_period": {
                    "type": "number",
                    "description": "Conversion Event Pixel. If frequency_cap > 0 - Required. One of the ID values of parameter `frequency_cap_periods` in /constants is added to this parameter."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CAMPAIGN_CUSTOM_DATA] macro.",
                    "maxLength": 500
                },
                "attribution_enabled": {
                    "type": "number",
                    "description": "Attribution & tracking. 1 - Use Attribution & tracking, 0 - Not use.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "conversion_pixel_id": {
                    "type": "number",
                    "description": "One Of the Conversion Pixel. If Use Attribution & tracking - Required. One of the ID values in pixels this campaign user."
                },
                "pixel_events_repeat": {
                    "type": "number",
                    "description": "Repeat Conversion Events. If Use Attribution & tracking - Required. One of the ID values of parameter `pixel_events_repeats` in /constants is added to this parameter."
                },
                "pixel_events_repeat_time": {
                    "type": "number",
                    "description": "If Use Attribution & tracking and pixel_events_repeat = 1 - Required.",
                    "minimum": 1
                },
                "pixel_events_repeat_period": {
                    "type": "number",
                    "description": "If Use Attribution & tracking and pixel_events_repeat = 1 - Required. One of the ID values of parameter `repeat_merit_event_periods` in /constants is added to this parameter."
                },
                "post_click_window_enabled": {
                    "type": "number",
                    "description": "Post-Click Conversion Interval. If Use Attribution & tracking - Required.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "post_click_window_period": {
                    "type": "number",
                    "description": "Interval. If Use Attribution & tracking and post_click_window_enabled = 1 - Required. One of the ID values of parameter `post_window_intervals` in /constants is added to this parameter."
                },
                "post_click_window": {
                    "type": "number",
                    "description": "Number. If Use Attribution & tracking and post_click_window_enabled = 1 - Required.",
                    "minimum": 1
                },
                "post_view_window_enabled": {
                    "type": "number",
                    "description": "Post-View Conversion Interval. If Use Attribution & tracking - Required.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "post_view_window_period": {
                    "type": "number",
                    "description": "Interval. If Use Attribution & tracking and post_view_window_enabled = 1 - Required. One of the ID values of parameter `post_window_intervals` in /constants is added to this parameter.",
                    "enum": [
                        5,
                        0
                    ]
                },
                "post_view_window": {
                    "type": "number",
                    "description": "Number. If Use Attribution & tracking and post_view_window_enabled = 1 - Required.",
                    "minimum": 1
                }
            }
        },
        "newCampaign": {
            "type": "object",
            "required": [
                "name",
                "user_id",
                "iab_category",
                "time_zone",
                "active",
                "is_unlimited_budget",
                "daily_budget_is_unlimited",
                "frequency_cap"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name.",
                    "minimum": 1,
                    "maximum": 255
                },
                "user_id": {
                    "type": "number",
                    "description": "Advertiser."
                },
                "iab_category": {
                    "type": "array",
                    "description": "IAB Category. Required. ID values of parameter `iab_categories` in /constants is added to this parameter.",
                    "items": {
                        "type": "string"
                    }
                },
                "time_zone": {
                    "type": "number",
                    "description": "Time Zone. One of the ID values of parameter `time_zones` in /constants is added to this parameter."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "is_unlimited_budget": {
                    "type": "number",
                    "description": "Budget Flights. 1 - Unlimited, 0 - Use Flights.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "daily_budget_is_unlimited": {
                    "type": "number",
                    "description": "Daily Spend Cap. 1 - Unlimited, 0 - Use daily_budget.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "daily_budget": {
                    "type": "number",
                    "pattern": "/\\d+(\\.\\d{0,})?/",
                    "minimum": 0.01,
                    "description": "If daily_budget_is_unlimited = 0 - Required."
                },
                "frequency_cap": {
                    "type": "number",
                    "description": "Required.",
                    "minimum": 0
                },
                "frequency_cap_type": {
                    "type": "number",
                    "description": "Conversion Event Pixel. If frequency_cap > 0 - Required. One of the ID values of parameter `frequency_cap_types` in /constants is added to this parameter.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "frequency_cap_period": {
                    "type": "number",
                    "description": "Conversion Event Pixel. If frequency_cap > 0 - Required. One of the ID values of parameter `frequency_cap_periods` in /constants is added to this parameter."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CAMPAIGN_CUSTOM_DATA] macro.",
                    "maxLength": 500
                },
                "attribution_enabled": {
                    "type": "number",
                    "description": "Attribution & tracking. 1 - Use Attribution & tracking, 0 - Not use.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "conversion_pixel_id": {
                    "type": "number",
                    "description": "One Of the Conversion Pixel. If Use Attribution & tracking - Required. One of the ID values in pixels this campaign user."
                },
                "pixel_events_repeat": {
                    "type": "number",
                    "description": "Repeat Conversion Events. If Use Attribution & tracking - Required. One of the ID values of parameter `pixel_events_repeats` in /constants is added to this parameter."
                },
                "pixel_events_repeat_time": {
                    "type": "number",
                    "description": "If Use Attribution & tracking and pixel_events_repeat = 1 - Required.",
                    "minimum": 1
                },
                "pixel_events_repeat_period": {
                    "type": "number",
                    "description": "If Use Attribution & tracking and pixel_events_repeat = 1 - Required. One of the ID values of parameter `repeat_merit_event_periods` in /constants is added to this parameter."
                },
                "post_click_window_enabled": {
                    "type": "number",
                    "description": "Post-Click Conversion Interval. If Use Attribution & tracking - Required.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "post_click_window_period": {
                    "type": "number",
                    "description": "Interval. If Use Attribution & tracking and post_click_window_enabled = 1 - Required. One of the ID values of parameter `post_window_intervals` in /constants is added to this parameter."
                },
                "post_click_window": {
                    "type": "number",
                    "description": "Number. If Use Attribution & tracking and post_click_window_enabled = 1 - Required.",
                    "minimum": 1
                },
                "post_view_window_enabled": {
                    "type": "number",
                    "description": "Post-View Conversion Interval. If Use Attribution & tracking - Required.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "post_view_window_period": {
                    "type": "number",
                    "description": "Interval. If Use Attribution & tracking and post_view_window_enabled = 1 - Required. One of the ID values of parameter `post_window_intervals` in /constants is added to this parameter.",
                    "enum": [
                        5,
                        0
                    ]
                },
                "post_view_window": {
                    "type": "number",
                    "description": "Number. If Use Attribution & tracking and post_view_window_enabled = 1 - Required.",
                    "minimum": 1
                }
            }
        },
        "editCampaign": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name.",
                    "minimum": 1,
                    "maximum": 255
                },
                "iab_category": {
                    "type": "array",
                    "description": "IAB Category. Required. ID values of parameter `iab_categories` in /constants is added to this parameter.",
                    "items": {
                        "type": "string"
                    }
                },
                "time_zone": {
                    "type": "number",
                    "description": "Time Zone. One of the ID values of parameter `time_zones` in /constants is added to this parameter."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "is_unlimited_budget": {
                    "type": "number",
                    "description": "Budget Flights. 1 - Unlimited, 0 - Use Flights.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "daily_budget_is_unlimited": {
                    "type": "number",
                    "description": "Daily Spend Cap. 1 - Unlimited, 0 - Use daily_budget.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "daily_budget": {
                    "type": "number",
                    "pattern": "/\\d+(\\.\\d{0,})?/",
                    "minimum": 0.01,
                    "description": "If daily_budget_is_unlimited = 0 - Required."
                },
                "frequency_cap": {
                    "type": "number",
                    "description": "Required.",
                    "minimum": 0
                },
                "frequency_cap_type": {
                    "type": "number",
                    "description": "Conversion Event Pixel. If frequency_cap > 0 - Required. One of the ID values of parameter `frequency_cap_types` in /constants is added to this parameter.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "frequency_cap_period": {
                    "type": "number",
                    "description": "Conversion Event Pixel. If frequency_cap > 0 - Required. One of the ID values of parameter `frequency_cap_periods` in /constants is added to this parameter."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CAMPAIGN_CUSTOM_DATA] macro.",
                    "maxLength": 500
                },
                "attribution_enabled": {
                    "type": "number",
                    "description": "Attribution & tracking. 1 - Use Attribution & tracking, 0 - Not use.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "conversion_pixel_id": {
                    "type": "number",
                    "description": "One Of the Conversion Pixel. If Use Attribution & tracking - Required. One of the ID values in pixels this campaign user."
                },
                "pixel_events_repeat": {
                    "type": "number",
                    "description": "Repeat Conversion Events. If Use Attribution & tracking - Required. One of the ID values of parameter `pixel_events_repeats` in /constants is added to this parameter."
                },
                "pixel_events_repeat_time": {
                    "type": "number",
                    "description": "If Use Attribution & tracking and pixel_events_repeat = 1 - Required.",
                    "minimum": 1
                },
                "pixel_events_repeat_period": {
                    "type": "number",
                    "description": "If Use Attribution & tracking and pixel_events_repeat = 1 - Required. One of the ID values of parameter `repeat_merit_event_periods` in /constants is added to this parameter."
                },
                "post_click_window_enabled": {
                    "type": "number",
                    "description": "Post-Click Conversion Interval. If Use Attribution & tracking - Required.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "post_click_window_period": {
                    "type": "number",
                    "description": "Interval. If Use Attribution & tracking and post_click_window_enabled = 1 - Required. One of the ID values of parameter `post_window_intervals` in /constants is added to this parameter."
                },
                "post_click_window": {
                    "type": "number",
                    "description": "Number. If Use Attribution & tracking and post_click_window_enabled = 1 - Required.",
                    "minimum": 1
                },
                "post_view_window_enabled": {
                    "type": "number",
                    "description": "Post-View Conversion Interval. If Use Attribution & tracking - Required.",
                    "enum": [
                        1,
                        0
                    ]
                },
                "post_view_window_period": {
                    "type": "number",
                    "description": "Interval. If Use Attribution & tracking and post_view_window_enabled = 1 - Required. One of the ID values of parameter `post_window_intervals` in /constants is added to this parameter.",
                    "enum": [
                        5,
                        0
                    ]
                },
                "post_view_window": {
                    "type": "number",
                    "description": "Number. If Use Attribution & tracking and post_view_window_enabled = 1 - Required.",
                    "minimum": 1
                }
            }
        },
        "Flights": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Flight"
                    }
                }
            }
        },
        "Flight": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "start_date": {
                    "type": "string",
                    "description": "Example: 2017-06-01 00:00:00"
                },
                "end_date": {
                    "type": "string",
                    "description": "Example: 2017-06-01 23:59:59"
                },
                "budget": {
                    "type": "number"
                }
            }
        },
        "newFlight": {
            "type": "object",
            "required": [
                "start_date",
                "end_date",
                "budget"
            ],
            "properties": {
                "start_date": {
                    "type": "string",
                    "description": "Example: 2017-06-01 00:00:00",
                    "default": "2017-06-01 00:00:00"
                },
                "end_date": {
                    "type": "string",
                    "description": "Example: 2017-06-01 23:59:59",
                    "default": "2017-06-01 23:59:59"
                },
                "budget": {
                    "type": "number"
                }
            }
        },
        "editFlight": {
            "type": "object",
            "properties": {
                "start_date": {
                    "type": "string",
                    "description": "Example: 2017-06-01 00:00:00",
                    "default": "2017-06-01 00:00:00"
                },
                "end_date": {
                    "type": "string",
                    "description": "Example: 2017-06-01 23:59:59",
                    "default": "2017-06-01 23:59:59"
                },
                "budget": {
                    "type": "number"
                }
            }
        },
        "EventTrackers": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/EventTracker"
                    }
                }
            }
        },
        "EventTracker": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Event Tracker ID."
                },
                "event": {
                    "type": "number",
                    "description": "Event ID. One of the ID values of parameter `creative_events` in /constants."
                },
                "url": {
                    "type": "string",
                    "description": "Tracking URL. For example http://example.com."
                }
            }
        },
        "newEventTracker": {
            "type": "object",
            "required": [
                "event",
                "url"
            ],
            "properties": {
                "event": {
                    "type": "number",
                    "description": "Event ID. One of the ID values of parameter `creative_events` in /constants."
                },
                "url": {
                    "type": "string",
                    "description": "Tracking URL. For example http://example.com.",
                    "maxLength": 255
                }
            }
        },
        "editEventTracker": {
            "type": "object",
            "properties": {
                "event": {
                    "type": "number",
                    "description": "Event ID. One of the ID values of parameter `creative_events` in /constants."
                },
                "url": {
                    "type": "string",
                    "description": "Tracking URL. For example http://example.com.",
                    "maxLength": 255
                }
            }
        },
        "Site_Lists": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Site_List"
                    }
                }
            }
        },
        "Site_List": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "user_id": {
                    "type": "number"
                },
                "active": {
                    "type": "number"
                },
                "relation_type": {
                    "type": "number"
                },
                "size": {
                    "type": "number"
                }
            }
        },
        "Sites": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Site"
            }
        },
        "Site": {
            "type": "string"
        },
        "Ip_Lists": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ip_List"
                    }
                }
            }
        },
        "Ip_List": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Ip List ID"
                },
                "name": {
                    "type": "string",
                    "description": "Ip List Name"
                },
                "user_id": {
                    "type": "number",
                    "description": "Ip List User ID"
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "relation_type": {
                    "type": "number",
                    "description": "One of the ID values of parameter `relation_type` in /constants is added to this parameter."
                },
                "size": {
                    "type": "number",
                    "description": "The number of IP in the list"
                }
            }
        },
        "IPs": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/IP"
            }
        },
        "IP": {
            "type": "string"
        },
        "Strategies": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Strategy"
                    }
                }
            }
        },
        "Strategy": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Don't use for Create or Update."
                },
                "name": {
                    "type": "string",
                    "description": "Name. Required.",
                    "minimum": 1,
                    "maximum": 255
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "channel": {
                    "type": "number",
                    "description": "Required. One of the ID values of parameter `channels` in /constants is added to this parameter."
                },
                "use_campaign_start_date": {
                    "type": "number",
                    "description": "Use Campaign Start Date - 1, No - 0. Required.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "use_campaign_end_date": {
                    "type": "number",
                    "description": "Use Campaign End Date - 1, No - 0. Required.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "start_date_interface": {
                    "type": "string",
                    "description": "Start Date. If use_campaign_start_date = 0 - Required.",
                    "format": "date"
                },
                "start_time_interface": {
                    "type": "string",
                    "pattern": "/^(([0,1][0-9])|(2[0-3])):[0-5][0-9]$/",
                    "description": "Start Time. If use_campaign_start_date = 0 - Required. Example 23:45:59"
                },
                "end_date_interface": {
                    "type": "string",
                    "format": "date",
                    "description": "End Date. If use_campaign_end_date = 0 - Required."
                },
                "end_time_interface": {
                    "type": "string",
                    "pattern": "/^(([0,1][0-9])|(2[0-3])):[0-5][0-9]$/",
                    "description": "End Time. If use_campaign_end_date = 0 - Required. Example 23:45:59"
                },
                "is_unlimited_budget": {
                    "type": "number",
                    "description": "Unlimited Budget. Required.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "total_budget": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 9999999,
                    "description": "Budget. If is_unlimited_budget = 0 - Required."
                },
                "max_bid": {
                    "type": "number",
                    "minimum": 0.01,
                    "maximum": 999999.99,
                    "pattern": "/\\d+(\\.\\d{0,})?/",
                    "description": "Max. CPM bid. Required."
                },
                "budget_pacing_type": {
                    "type": "number",
                    "description": "Pacing Type. Required. One of the ID values of parameter `budget_pacing_types` in /constants is added to this parameter."
                },
                "local_budget": {
                    "type": "number",
                    "minimum": 25,
                    "maximum": 999999.99,
                    "description": "Budget For Budget Period."
                },
                "budget_period": {
                    "type": "number",
                    "description": "Budget Period. Required. One of the ID values of parameter `budget_pacing_budget_intervals` in /constants is added to this parameter."
                },
                "frequency_cap_per_user_impressions": {
                    "type": "number",
                    "minimum": 0,
                    "description": "If frequency_cap_per_user_impressions > 0 - Required."
                },
                "frequency_cap_pacing_type": {
                    "type": "number",
                    "description": "If frequency_cap_per_user_impressions > 0 - Required. One of the ID values of parameter `frequency_cap_pacing_types` in /constants is added to this parameter."
                },
                "frequency_cap_time_units_count": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 29,
                    "description": "If frequency_cap_per_user_impressions > 0 - Required."
                },
                "frequency_cap_per_user_impressions_period": {
                    "type": "number",
                    "description": "If frequency_cap_per_user_impressions > 0 - Required. One of the ID values of parameter `frequency_cap_pacing_periods` in /constants is added to this parameter."
                },
                "frequency_cap_per_source": {
                    "type": "number",
                    "description": "Required.",
                    "minimum": 0
                },
                "source_definition": {
                    "type": "number",
                    "description": "If frequency_cap_per_source > 0 - Required. One of the ID values of parameter `frequency_cap_source_definition` in /constants is added to this parameter."
                },
                "impressions_cap_is_unlimited": {
                    "type": "number",
                    "description": "Unlimited impressions cap - 0. No - 1 Required.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "impressions_cap": {
                    "type": "number",
                    "minimum": 1,
                    "description": "If impressions_cap_is_unlimited = 1 - Required."
                },
                "rtb_supply_type_open_or_private": {
                    "type": "number",
                    "description": "Supply Type. Required. One of the ID values of parameter `rtb_supply_types` in /constants is added to this parameter."
                },
                "inventory_types": {
                    "type": "string",
                    "description": "Inventory Types. Required. ID values of parameter `inventory_types` in /constants is added to this parameter. For example 1 or 1,2."
                },
                "any_ssp_is_allowed": {
                    "type": "number",
                    "description": "Run on all Open Supply sources. Run All - 1. Not All - 0. Required.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "any_rtb_deal_is_allowed": {
                    "type": "number",
                    "description": "Run on all deals. Run All - 1. Not All - 0. Required.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "is_all_days_part": {
                    "type": "number",
                    "description": "Run on all day parts. Run All - 1. Not All - 0. Required.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [STRATEGY_CUSTOM_DATA] macro.",
                    "maxLength": 500
                }
            }
        },
        "newStrategy": {
            "type": "object",
            "required": [
                "name",
                "active",
                "channel",
                "use_campaign_start_date",
                "use_campaign_end_date",
                "is_unlimited_budget",
                "max_bid",
                "budget_pacing_type",
                "budget_period",
                "frequency_cap_per_user_impressions",
                "frequency_cap_per_source",
                "impressions_cap_is_unlimited",
                "rtb_supply_type_open_or_private",
                "inventory_types",
                "any_ssp_is_allowed",
                "any_rtb_deal_is_allowed",
                "is_all_days_part"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name.",
                    "minimum": 1,
                    "maximum": 255
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "channel": {
                    "type": "number",
                    "description": "One of the ID values of parameter `channels` in /constants is added to this parameter."
                },
                "use_campaign_start_date": {
                    "type": "number",
                    "description": "Use Campaign Start Date - 1, No - 0.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "use_campaign_end_date": {
                    "type": "number",
                    "description": "Use Campaign End Date - 1, No - 0.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "start_date_interface": {
                    "type": "string",
                    "description": "Start Date. If use_campaign_start_date = 0 - Required.",
                    "format": "date"
                },
                "start_time_interface": {
                    "type": "string",
                    "pattern": "/^(([0,1][0-9])|(2[0-3])):[0-5][0-9]$/",
                    "description": "Start Time. If use_campaign_start_date = 0 - Required. Example 23:45:59"
                },
                "end_date_interface": {
                    "type": "string",
                    "format": "date",
                    "description": "End Date. If use_campaign_end_date = 0 - Required."
                },
                "end_time_interface": {
                    "type": "string",
                    "pattern": "/^(([0,1][0-9])|(2[0-3])):[0-5][0-9]$/",
                    "description": "End Time. If use_campaign_end_date = 0 - Required. Example 23:45:59"
                },
                "is_unlimited_budget": {
                    "type": "number",
                    "description": "Unlimited Budget.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "total_budget": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 9999999,
                    "description": "Budget. If is_unlimited_budget = 0 - Required."
                },
                "max_bid": {
                    "type": "number",
                    "minimum": 0.01,
                    "maximum": 999999.99,
                    "pattern": "/\\d+(\\.\\d{0,})?/",
                    "description": "Max. CPM bid."
                },
                "budget_pacing_type": {
                    "type": "number",
                    "description": "Pacing Type. One of the ID values of parameter `budget_pacing_types` in /constants is added to this parameter."
                },
                "local_budget": {
                    "type": "number",
                    "minimum": 25,
                    "maximum": 999999.99,
                    "description": "Budget For Budget Period."
                },
                "budget_period": {
                    "type": "number",
                    "description": "Budget Period. One of the ID values of parameter `budget_pacing_budget_intervals` in /constants is added to this parameter."
                },
                "frequency_cap_per_user_impressions": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Required."
                },
                "frequency_cap_pacing_type": {
                    "type": "number",
                    "description": "If frequency_cap_per_user_impressions > 0 - Required. One of the ID values of parameter `frequency_cap_pacing_types` in /constants is added to this parameter."
                },
                "frequency_cap_time_units_count": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 29,
                    "description": "If frequency_cap_per_user_impressions > 0 - Required."
                },
                "frequency_cap_per_user_impressions_period": {
                    "type": "number",
                    "description": "If frequency_cap_per_user_impressions > 0 - Required. One of the ID values of parameter `frequency_cap_pacing_periods` in /constants is added to this parameter."
                },
                "frequency_cap_per_source": {
                    "type": "number",
                    "description": "Required.",
                    "minimum": 0
                },
                "source_definition": {
                    "type": "number",
                    "description": "If frequency_cap_per_source > 0 - Required. One of the ID values of parameter `frequency_cap_source_definition` in /constants is added to this parameter."
                },
                "impressions_cap_is_unlimited": {
                    "type": "number",
                    "description": "Unlimited impressions cap - 0. No - 1.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "impressions_cap": {
                    "type": "number",
                    "minimum": 1,
                    "description": "If impressions_cap_is_unlimited = 1 - Required."
                },
                "rtb_supply_type_open_or_private": {
                    "type": "number",
                    "description": "Supply Type. One of the ID values of parameter `rtb_supply_types` in /constants is added to this parameter."
                },
                "inventory_types": {
                    "type": "string",
                    "description": "Inventory Types. ID values of parameter `inventory_types` in /constants is added to this parameter. For example 1 or 1,2."
                },
                "any_ssp_is_allowed": {
                    "type": "number",
                    "description": "Run on all Open Supply sources. Run All - 1. Not All - 0.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "any_rtb_deal_is_allowed": {
                    "type": "number",
                    "description": "Run on all deals. Run All - 1. Not All - 0.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "is_all_days_part": {
                    "type": "number",
                    "description": "Run on all day parts. Run All - 1. Not All - 0.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [STRATEGY_CUSTOM_DATA] macro.",
                    "maxLength": 500
                }
            }
        },
        "editStrategy": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name.",
                    "minimum": 1,
                    "maximum": 255
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "use_campaign_start_date": {
                    "type": "number",
                    "description": "Use Campaign Start Date - 1, No - 0.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "use_campaign_end_date": {
                    "type": "number",
                    "description": "Use Campaign End Date - 1, No - 0.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "start_date_interface": {
                    "type": "string",
                    "description": "Start Date. If use_campaign_start_date = 0 - Required.",
                    "format": "date"
                },
                "start_time_interface": {
                    "type": "string",
                    "pattern": "/^(([0,1][0-9])|(2[0-3])):[0-5][0-9]$/",
                    "description": "Start Time. If use_campaign_start_date = 0 - Required. Example 23:45:59"
                },
                "end_date_interface": {
                    "type": "string",
                    "format": "date",
                    "description": "End Date. If use_campaign_end_date = 0 - Required."
                },
                "end_time_interface": {
                    "type": "string",
                    "pattern": "/^(([0,1][0-9])|(2[0-3])):[0-5][0-9]$/",
                    "description": "End Time. If use_campaign_end_date = 0 - Required. Example 23:45:59"
                },
                "is_unlimited_budget": {
                    "type": "number",
                    "description": "Unlimited Budget.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "total_budget": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 9999999,
                    "description": "Budget. If is_unlimited_budget = 0 - Required."
                },
                "max_bid": {
                    "type": "number",
                    "minimum": 0.01,
                    "maximum": 999999.99,
                    "pattern": "/\\d+(\\.\\d{0,})?/",
                    "description": "Max. CPM bid."
                },
                "budget_pacing_type": {
                    "type": "number",
                    "description": "Pacing Type. One of the ID values of parameter `budget_pacing_types` in /constants is added to this parameter."
                },
                "local_budget": {
                    "type": "number",
                    "minimum": 25,
                    "maximum": 999999.99,
                    "description": "Budget For Budget Period."
                },
                "budget_period": {
                    "type": "number",
                    "description": "Budget Period. One of the ID values of parameter `budget_pacing_budget_intervals` in /constants is added to this parameter."
                },
                "frequency_cap_per_user_impressions": {
                    "type": "number",
                    "minimum": 0,
                    "description": "Required."
                },
                "frequency_cap_pacing_type": {
                    "type": "number",
                    "description": "If frequency_cap_per_user_impressions > 0 - Required. One of the ID values of parameter `frequency_cap_pacing_types` in /constants is added to this parameter."
                },
                "frequency_cap_time_units_count": {
                    "type": "number",
                    "minimum": 1,
                    "maximum": 29,
                    "description": "If frequency_cap_per_user_impressions > 0 - Required."
                },
                "frequency_cap_per_user_impressions_period": {
                    "type": "number",
                    "description": "If frequency_cap_per_user_impressions > 0 - Required. One of the ID values of parameter `frequency_cap_pacing_periods` in /constants is added to this parameter."
                },
                "frequency_cap_per_source": {
                    "type": "number",
                    "description": "Required.",
                    "minimum": 0
                },
                "source_definition": {
                    "type": "number",
                    "description": "If frequency_cap_per_source > 0 - Required. One of the ID values of parameter `frequency_cap_source_definition` in /constants is added to this parameter."
                },
                "impressions_cap_is_unlimited": {
                    "type": "number",
                    "description": "Unlimited impressions cap - 0. No - 1.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "impressions_cap": {
                    "type": "number",
                    "minimum": 1,
                    "description": "If impressions_cap_is_unlimited = 1 - Required."
                },
                "rtb_supply_type_open_or_private": {
                    "type": "number",
                    "description": "Supply Type. One of the ID values of parameter `rtb_supply_types` in /constants is added to this parameter."
                },
                "inventory_types": {
                    "type": "string",
                    "description": "Inventory Types. ID values of parameter `inventory_types` in /constants is added to this parameter. For example 1 or 1,2."
                },
                "any_ssp_is_allowed": {
                    "type": "number",
                    "description": "Run on all Open Supply sources. Run All - 1. Not All - 0.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "any_rtb_deal_is_allowed": {
                    "type": "number",
                    "description": "Run on all deals. Run All - 1. Not All - 0.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "is_all_days_part": {
                    "type": "number",
                    "description": "Run on all day parts. Run All - 1. Not All - 0.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [STRATEGY_CUSTOM_DATA] macro.",
                    "maxLength": 500
                }
            }
        },
        "Creatives": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Creative"
                    }
                }
            }
        },
        "Creative": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Creative ID."
                },
                "name": {
                    "type": "string",
                    "description": "Creative Name."
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "iab_attr": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "adomain": {
                    "type": "string",
                    "description": "Advertiser domain."
                },
                "size": {
                    "type": "number",
                    "description": "Dimension."
                },
                "audio": {
                    "type": "number",
                    "description": "Audio. 1 - yes, 0 - no."
                },
                "html": {
                    "type": "string"
                },
                "secure_type": {
                    "type": "number",
                    "description": "Security."
                },
                "image_attachment": {
                    "type": "string"
                },
                "destination_url": {
                    "type": "string",
                    "description": "Click-through URL."
                },
                "call_to_action": {
                    "type": "number",
                    "description": "Call To Action."
                },
                "image_attachment_logo": {
                    "type": "string"
                },
                "headline": {
                    "type": "string",
                    "description": "Headline."
                },
                "description": {
                    "type": "string",
                    "description": "Description"
                },
                "brand_name": {
                    "type": "string",
                    "description": "Brand name."
                },
                "video_attachment": {
                    "type": "string"
                },
                "video_api_framework": {
                    "type": "number",
                    "description": "API Framework."
                },
                "vast_type": {
                    "type": "number",
                    "description": "0 - VAST XML, 1 - VAST Wrapper."
                },
                "is_1pas": {
                    "type": "number",
                    "description": "PAS flag."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                    "maxLength": 500
                }
            }
        },
        "Creatives_Native": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Creative_Native"
                    }
                }
            }
        },
        "Creative_Native": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Creative ID."
                },
                "name": {
                    "type": "string",
                    "description": "Creative Name."
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "iab_attr": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "image_attachment": {
                    "type": "string",
                    "description": "Image to upload. Only '.png, .jpg, .jpeg' is allowed."
                },
                "image_attachment_logo": {
                    "type": "string",
                    "description": "Logo Image to upload. Only '.png, .jpg, .jpeg' is allowed."
                },
                "call_to_action": {
                    "type": "number",
                    "description": "Call To Action."
                },
                "headline": {
                    "type": "string",
                    "description": "Headline."
                },
                "description": {
                    "type": "string",
                    "description": "Description."
                },
                "brand_name": {
                    "type": "string",
                    "description": "Brand Name."
                },
                "adomain": {
                    "type": "string",
                    "description": "Advertiser domain."
                },
                "destination_url": {
                    "type": "string",
                    "description": "Click-through URL. For example http://example.com."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                    "maxLength": 500
                }
            }
        },
        "Creatives_Display_1pas": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Creative_Display_1pas"
                    }
                }
            }
        },
        "Creative_Display_1pas": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Creative ID."
                },
                "name": {
                    "type": "string",
                    "description": "Creative Name."
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "iab_attr": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "image_attachment": {
                    "type": "string",
                    "description": "Image to upload. Only '.gif, .png, .jpg, .jpeg' is allowed."
                },
                "destination_url": {
                    "type": "string",
                    "description": "Click-through URL. For example http://example.com."
                },
                "adomain": {
                    "type": "string",
                    "description": "Advertiser domain."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                    "maxLength": 500
                },
                "size": {
                    "type": "number",
                    "description": "Dimensions."
                }
            }
        },
        "Creatives_Display_3pas": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Creative_Display_3pas"
                    }
                }
            }
        },
        "Creative_Display_3pas": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Creative ID."
                },
                "name": {
                    "type": "string",
                    "description": "Creative Name."
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "iab_attr": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "adomain": {
                    "type": "string",
                    "description": "Advertiser domain."
                },
                "size": {
                    "type": "number",
                    "description": "Dimensions."
                },
                "audio": {
                    "type": "number",
                    "description": "Audio. 1 - Yes, 0 - No."
                },
                "html": {
                    "type": "string",
                    "description": "Ad Tag Code."
                },
                "secure_type": {
                    "type": "number",
                    "description": "Security."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                    "maxLength": 500
                }
            }
        },
        "newCreative_Display_3pas": {
            "type": "object",
            "required": [
                "name",
                "user_id",
                "active",
                "adomain",
                "size",
                "audio",
                "html",
                "secure_type"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Creative Name."
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "iab_attr": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "adomain": {
                    "type": "string",
                    "description": "Advertiser domain."
                },
                "size": {
                    "type": "number",
                    "description": "Dimensions."
                },
                "display_width": {
                    "type": "number",
                    "description": "Display Width. if size = 0 - Required.",
                    "minimum": 1,
                    "maximum": 10000
                },
                "display_height": {
                    "type": "number",
                    "description": "Display Height. if size = 0 - Required.",
                    "minimum": 1,
                    "maximum": 10000
                },
                "audio": {
                    "type": "number",
                    "description": "Audio. 1 - Yes, 0 - No."
                },
                "html": {
                    "type": "string",
                    "description": "Ad Tag Code."
                },
                "secure_type": {
                    "type": "number",
                    "description": "Security."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                    "maxLength": 500
                }
            }
        },
        "editCreative_Display_3pas": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Creative Name."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "iab_attr": {
                    "type": "array",
                    "items": {
                        "type": "number"
                    }
                },
                "size": {
                    "type": "number",
                    "description": "Dimensions."
                },
                "display_width": {
                    "type": "number",
                    "description": "Display Width. if size = 0 - Required.",
                    "minimum": 1,
                    "maximum": 10000
                },
                "display_height": {
                    "type": "number",
                    "description": "Display Height. if size = 0 - Required.",
                    "minimum": 1,
                    "maximum": 10000
                },
                "audio": {
                    "type": "number",
                    "description": "Audio. 1 - yes, 0 - no."
                },
                "secure_type": {
                    "type": "number",
                    "description": "Security."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                    "maxLength": 500
                }
            }
        },
        "Creatives_Video_1pas": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Creative_Video_1pas"
                    }
                }
            }
        },
        "Creative_Video_1pas": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Creative ID."
                },
                "name": {
                    "type": "string",
                    "description": "Creative Name."
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                    "maxLength": 500
                },
                "adomain": {
                    "type": "string",
                    "description": "Advertiser domain."
                },
                "video_attachment": {
                    "type": "string",
                    "description": "Video to upload. Only '.flv, .mp4, .avi, .wmv, .mov' is allowed"
                }
            }
        },
        "Creatives_Video_3pas": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Creative_Video_3pas"
                    }
                }
            }
        },
        "Creative_Video_3pas": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Creative ID."
                },
                "name": {
                    "type": "string",
                    "description": "Creative Name."
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                    "maxLength": 500
                },
                "adomain": {
                    "type": "string",
                    "description": "Advertiser domain."
                },
                "video_api_framework": {
                    "type": "number",
                    "description": "API Framework."
                },
                "vast_type": {
                    "type": "number",
                    "description": "0 - VAST XML, 1 - VAST Wrapper"
                },
                "html": {
                    "type": "string",
                    "description": "Video Asset."
                }
            }
        },
        "newCreative_Video_3pas": {
            "type": "object",
            "required": [
                "name",
                "user_id",
                "active",
                "adomain",
                "video_api_framework",
                "vast_type",
                "html"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Creative Name."
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                    "maxLength": 500
                },
                "adomain": {
                    "type": "string",
                    "description": "Advertiser domain."
                },
                "video_api_framework": {
                    "type": "number",
                    "description": "API Framework."
                },
                "vast_type": {
                    "type": "number",
                    "description": "0 - VAST XML, 1 - VAST Wrapper."
                },
                "html": {
                    "type": "string",
                    "description": "Video Asset."
                }
            }
        },
        "editCreative_Video_3pas": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Creative Name."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "macros_custom_data": {
                    "type": "string",
                    "description": "You can pass this data upon impression using the [CREATIVE_CUSTOM_DATA] macro.",
                    "maxLength": 500
                },
                "video_api_framework": {
                    "type": "number",
                    "description": "API Framework."
                },
                "vast_type": {
                    "type": "number",
                    "description": "0 - VAST XML, 1 - VAST Wrapper"
                },
                "html": {
                    "type": "string",
                    "description": "Video Asset."
                }
            }
        },
        "Ssps": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Ssp"
                    }
                }
            }
        },
        "Ssp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Ssp Id."
                },
                "status": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "display_name": {
                    "type": "string",
                    "description": "RTB Name for interface."
                },
                "name": {
                    "type": "string",
                    "description": "RTB Name for endpoint."
                },
                "test_mode": {
                    "type": "number",
                    "description": "Test Mode. One of the ID values of parameter `test_mode` in /constants is added to this parameter."
                },
                "supply_type": {
                    "type": "number",
                    "description": "Supply Type. One of the ID values of parameter `supply_types` in /constants is added to this parameter."
                }
            }
        },
        "newSsp": {
            "type": "object",
            "required": [
                "status",
                "display_name",
                "name",
                "test_mode",
                "supply_type"
            ],
            "properties": {
                "status": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "display_name": {
                    "type": "string",
                    "description": "RTB Name for interface.",
                    "minimum": 3,
                    "maximum": 255
                },
                "name": {
                    "type": "string",
                    "description": "RTB Name for endpoint.",
                    "minimum": 3,
                    "maximum": 255
                },
                "test_mode": {
                    "type": "number",
                    "description": "Test Mode. One of the ID values of parameter `test_mode` in /constants is added to this parameter."
                },
                "supply_type": {
                    "type": "number",
                    "description": "Supply Type. One of the ID values of parameter `supply_types` in /constants is added to this parameter."
                }
            }
        },
        "editSsp": {
            "type": "object",
            "properties": {
                "status": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "display_name": {
                    "type": "string",
                    "description": "RTB Name for interface.",
                    "minimum": 3,
                    "maximum": 255
                },
                "name": {
                    "type": "string",
                    "description": "RTB Name for endpoint.",
                    "minimum": 3,
                    "maximum": 255
                },
                "test_mode": {
                    "type": "number",
                    "description": "Test Mode. One of the ID values of parameter `test_mode` in /constants is added to this parameter."
                },
                "supply_type": {
                    "type": "number",
                    "description": "Supply Type. One of the ID values of parameter `supply_types` in /constants is added to this parameter."
                }
            }
        },
        "Deals": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Deal"
                    }
                }
            }
        },
        "Deal": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Name Deal. Required."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID. Required."
                },
                "ssp_id": {
                    "type": "number",
                    "description": "SSP ID for user. Required."
                },
                "publisher_id": {
                    "type": "number",
                    "description": "Publisher ID. Required."
                },
                "start_immediately": {
                    "type": "number",
                    "description": "Start Immediately. Required. 1 - Yes, 0 - No.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "start_date": {
                    "type": "string",
                    "description": "If start_immediately = 0 - Required. Start Date.",
                    "format": "date"
                },
                "is_no_end_date": {
                    "type": "number",
                    "description": "Don't Used End Date. Required. 1 - Don't use, 0 - Use.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "end_date": {
                    "type": "string",
                    "description": "If is_no_end_date = 0 - Required. End Date.",
                    "format": "date"
                },
                "deal_id": {
                    "type": "number",
                    "description": "Deal ID"
                },
                "bid": {
                    "type": "number",
                    "pattern": "/\\d+(\\.\\d{0,})?/",
                    "description": "Bid Type. Required."
                },
                "bid_type": {
                    "type": "number",
                    "description": "Bid Type. Required. One of the ID values of parameter `bid_type` in /constants is added to this parameter."
                }
            }
        },
        "newDeal": {
            "type": "object",
            "required": [
                "name",
                "active",
                "user_id",
                "ssp_id",
                "publisher_id",
                "start_immediately",
                "is_no_end_date",
                "bid",
                "bid_type"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name Deal."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "ssp_id": {
                    "type": "number",
                    "description": "SSP ID for user."
                },
                "publisher_id": {
                    "type": "number",
                    "description": "Publisher ID."
                },
                "start_immediately": {
                    "type": "number",
                    "description": "Start Immediately. 1 - Yes, 0 - No.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "start_date": {
                    "type": "string",
                    "description": "If start_immediately = 0 - Required. Start Date.",
                    "format": "date"
                },
                "is_no_end_date": {
                    "type": "number",
                    "description": "Don't Used End Date. 1 - Don't use, 0 - Use.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "end_date": {
                    "type": "string",
                    "description": "If is_no_end_date = 0 - Required. End Date.",
                    "format": "date"
                },
                "deal_id": {
                    "type": "number",
                    "description": "Deal ID"
                },
                "bid": {
                    "type": "number",
                    "pattern": "/\\d+(\\.\\d{0,})?/",
                    "description": "Bid Type."
                },
                "bid_type": {
                    "type": "number",
                    "description": "Bid Type. One of the ID values of parameter `bid_type` in /constants is added to this parameter."
                }
            }
        },
        "editDeal": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name Deal."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "publisher_id": {
                    "type": "number",
                    "description": "Publisher ID."
                },
                "start_immediately": {
                    "type": "number",
                    "description": "Start Immediately. 1 - Yes, 0 - No.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "start_date": {
                    "type": "string",
                    "description": "If start_immediately = 0 - Required. Start Date.",
                    "format": "date"
                },
                "is_no_end_date": {
                    "type": "number",
                    "description": "Don't Used End Date. 1 - Don't use, 0 - Use.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "end_date": {
                    "type": "string",
                    "description": "If is_no_end_date = 0 - Required. End Date.",
                    "format": "date"
                },
                "deal_id": {
                    "type": "number",
                    "description": "Deal ID"
                },
                "bid": {
                    "type": "number",
                    "pattern": "/\\d+(\\.\\d{0,})?/",
                    "description": "Bid Type."
                },
                "bid_type": {
                    "type": "number",
                    "description": "Bid Type. One of the ID values of parameter `bid_type` in /constants is added to this parameter."
                }
            }
        },
        "Contextual_Strategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "$ref": "#/definitions/Contextual_List"
                }
            }
        },
        "Contextual_List": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Contextual_in_List"
                },
                "excluded": {
                    "$ref": "#/definitions/Contextual_in_List"
                }
            }
        },
        "Contextual_in_List": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Contextual"
            }
        },
        "Contextuals": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Contextual"
                    }
                }
            }
        },
        "Contextual": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "number"
                }
            }
        },
        "Data_Provider_Strategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "$ref": "#/definitions/Data_Provider_List"
                }
            }
        },
        "Data_Provider_List": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Data_Provider_in_List"
                },
                "excluded": {
                    "$ref": "#/definitions/Data_Provider_in_List"
                }
            }
        },
        "Data_Provider_in_List": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Data_Provider"
            }
        },
        "Data_Providers": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Data_Provider"
                    }
                }
            }
        },
        "Data_Provider": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "number"
                }
            }
        },
        "Pixel_Strategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "$ref": "#/definitions/Pixel_List"
                }
            }
        },
        "Pixel_List": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Pixel_in_List"
                },
                "excluded": {
                    "$ref": "#/definitions/Pixel_in_List"
                }
            }
        },
        "Pixel_in_List": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Pixel"
            }
        },
        "Pixels": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Pixel"
                    }
                }
            }
        },
        "Pixel": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Id Pixel"
                },
                "name": {
                    "type": "string",
                    "description": "Name Pixel."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "default_ext": {
                    "type": "number",
                    "description": "External Segment ID. Use in `Data` type (type = 0).",
                    "enum": [
                        0,
                        1
                    ]
                },
                "ext_segment_id": {
                    "type": "string",
                    "description": "External Segment ID. Use if default_ext = 0."
                },
                "user_ttl_days": {
                    "type": "number",
                    "description": "Lifetime, days",
                    "minimum": 1,
                    "maximum": 360
                },
                "type": {
                    "type": "number",
                    "description": "Type Pixel. Required. One of the ID values of parameter `pixel_type` in /constants is added to this parameter."
                },
                "default_conversion_value": {
                    "type": "number",
                    "description": "Default conversion value. Use in `Event` type (type = 1).",
                    "pattern": "/\\d+(\\.\\d{0,})?/"
                }
            }
        },
        "newPixel": {
            "type": "object",
            "required": [
                "name",
                "active",
                "user_id"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name Pixel."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "type": {
                    "type": "number",
                    "description": "Type Pixle. One of the ID values of parameter `pixel_type` in /constants is added to this parameter."
                },
                "default_ext": {
                    "type": "number",
                    "description": "External Segment ID. Use in `Data` type (type = 0).",
                    "enum": [
                        0,
                        1
                    ]
                },
                "ext_segment_id": {
                    "type": "string",
                    "description": "Use in  `Data` type (type = 0) if default_ext = 0.  External Segment ID"
                },
                "user_ttl_days": {
                    "type": "number",
                    "description": "Lifetime, days",
                    "minimum": 1,
                    "maximum": 360
                },
                "default_conversion_value": {
                    "type": "number",
                    "description": "Default conversion value. Use in `Event` type (type = 1).",
                    "pattern": "/\\d+(\\.\\d{0,})?/"
                }
            }
        },
        "editPixel": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name Pixel."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter."
                },
                "default_ext": {
                    "type": "number",
                    "description": "External Segment ID. Use in `Data` type (type = 0).",
                    "enum": [
                        0,
                        1
                    ]
                },
                "ext_segment_id": {
                    "type": "string",
                    "description": "Use in  `Data` type (type = 0) if default_ext = 0.  External Segment ID"
                },
                "user_ttl_days": {
                    "type": "number",
                    "description": "Lifetime, days",
                    "minimum": 1,
                    "maximum": 360
                },
                "default_conversion_value": {
                    "type": "number",
                    "description": "Default conversion value. Use in `Event` type (type = 1).",
                    "pattern": "/\\d+(\\.\\d{0,})?/"
                }
            }
        },
        "DayParts": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DayPart"
                    }
                }
            }
        },
        "DayPart": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "days": {
                    "type": "string"
                },
                "start_time": {
                    "type": "number"
                },
                "end_time": {
                    "type": "number"
                }
            }
        },
        "DayParts_Add_Strategy": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/DayPart_Add_Strategy"
            }
        },
        "DayPart_Add_Strategy": {
            "properties": {
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Days"
                    }
                },
                "start_format": {
                    "type": "string",
                    "enum": [
                        "am",
                        "pm"
                    ]
                },
                "end_format": {
                    "type": "string",
                    "enum": [
                        "am",
                        "pm"
                    ]
                },
                "start_time": {
                    "$ref": "#/definitions/DayTime"
                },
                "end_time": {
                    "$ref": "#/definitions/DayTime"
                }
            }
        },
        "Days": {
            "description": "One of the ID values of parameter `days` in /constants is added to this parameter",
            "type": "string"
        },
        "DayTime": {
            "description": "One of the ID values of parameter `time` in /constants is added to this parameter",
            "type": "number"
        },
        "CheckLists": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/CheckList"
                    }
                }
            }
        },
        "CheckList": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                },
                "status": {
                    "type": "number"
                }
            }
        },
        "ReportBids": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/ReportBid"
                    }
                }
            }
        },
        "ReportBid": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "info": {
                    "type": "string"
                }
            }
        },
        "Location_Strategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "$ref": "#/definitions/Location_List"
                }
            }
        },
        "Location_List": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Location_in_List"
                },
                "excluded": {
                    "$ref": "#/definitions/Location_in_List"
                }
            }
        },
        "Location_in_List": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Location"
            }
        },
        "Location": {
            "type": "object",
            "properties": {
                "country_name": {
                    "type": "string"
                },
                "region_name": {
                    "type": "string"
                },
                "city_name": {
                    "type": "string"
                },
                "country_id": {
                    "type": "number"
                },
                "region_id": {
                    "type": "number"
                },
                "city_id": {
                    "type": "number"
                }
            }
        },
        "Location_Included_Excluded": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Location_Array"
                },
                "excluded": {
                    "$ref": "#/definitions/Location_Array"
                }
            }
        },
        "Location_Array": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Location_Parametrs"
            }
        },
        "Location_Parametrs": {
            "type": "object",
            "description": "One parametr is Required",
            "properties": {
                "city": {
                    "description": "City Id",
                    "type": "number"
                },
                "region": {
                    "description": "Region Id",
                    "type": "number"
                },
                "country": {
                    "description": "Country Id",
                    "type": "number"
                }
            }
        },
        "Os_Strategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "$ref": "#/definitions/Os_List"
                }
            }
        },
        "Os_Add": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Os_List_add"
                },
                "excluded": {
                    "$ref": "#/definitions/Os_List_add"
                }
            }
        },
        "Os_List_add": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Os_name"
            }
        },
        "Os_List": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Os_in_List"
                },
                "excluded": {
                    "$ref": "#/definitions/Os_in_List"
                }
            }
        },
        "Os_in_List": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Os"
            }
        },
        "Os_name": {
            "type": "string"
        },
        "Oss": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Os"
            }
        },
        "Os": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Devices": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Device"
            }
        },
        "Connection_Type_Strategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "$ref": "#/definitions/Connection_Type_List"
                }
            }
        },
        "Connection_Type_List": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Connection_Type_in_List"
                },
                "excluded": {
                    "$ref": "#/definitions/Connection_Type_in_List"
                }
            }
        },
        "Connection_Type_in_List": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Connection_Type"
            }
        },
        "Connection_Types": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Connection_Type"
            }
        },
        "Connection_Type": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Browser_Strategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "$ref": "#/definitions/Browser_List"
                }
            }
        },
        "Browser_Add": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Browser_List_add"
                },
                "excluded": {
                    "$ref": "#/definitions/Browser_List_add"
                }
            }
        },
        "Browser_List_add": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Browser_name"
            }
        },
        "Browser_name": {
            "type": "string"
        },
        "Browser_List": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Browser_in_List"
                },
                "excluded": {
                    "$ref": "#/definitions/Browser_in_List"
                }
            }
        },
        "Browser_in_List": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Browsers"
            }
        },
        "Browsers": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Browser"
            }
        },
        "Browser": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Device_Strategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "$ref": "#/definitions/Device_List"
                }
            }
        },
        "Device_Add": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Device_List_add"
                },
                "excluded": {
                    "$ref": "#/definitions/Device_List_add"
                }
            }
        },
        "Device_List_add": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Device_name"
            }
        },
        "Device_name": {
            "type": "string"
        },
        "Device_List": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Device_in_List"
                },
                "excluded": {
                    "$ref": "#/definitions/Device_in_List"
                }
            }
        },
        "Device_in_List": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Device"
            }
        },
        "Device": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Carrier_Strategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "$ref": "#/definitions/Carrier_List"
                }
            }
        },
        "Carrier_List": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Carrier_in_List"
                },
                "excluded": {
                    "$ref": "#/definitions/Carrier_in_List"
                }
            }
        },
        "Carrier_in_List": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Carrier"
            }
        },
        "Carriers": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Carrier"
                    }
                }
            }
        },
        "Carrier": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "Included_Excluded_Carriers": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Carrier_List_Names"
                },
                "excluded": {
                    "$ref": "#/definitions/Carrier_List_Names"
                }
            }
        },
        "Carrier_List_Names": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Carrier_Name"
            }
        },
        "Carrier_Name": {
            "type": "string"
        },
        "Video_Strategy": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "$ref": "#/definitions/Video_List"
                }
            }
        },
        "Video_List": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/Video_in_List"
                },
                "excluded": {
                    "$ref": "#/definitions/Video_in_List"
                }
            }
        },
        "Video_in_List": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Video"
            }
        },
        "Video_Lists": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Video"
                    }
                }
            }
        },
        "Video": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Constants": {
            "type": "object",
            "properties": {
                "statuses": {
                    "type": "array",
                    "description": "Statuses",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "iab_categories": {
                    "type": "array",
                    "description": "IAB Categories",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "time_zones": {
                    "type": "array",
                    "description": "Time Zones",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "frequency_cap_types": {
                    "type": "array",
                    "description": "List Frequency Cap Types",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "frequency_cap_periods": {
                    "type": "array",
                    "description": "List Frequency Cap Periods",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "pixel_events_repeats": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "repeat_merit_event_periods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "post_window_intervals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "channels": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "budget_pacing_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "budget_pacing_budget_intervals": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "frequency_cap_pacing_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "frequency_cap_pacing_periods": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "frequency_cap_source_definition": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "rtb_supply_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "inventory_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "target_any_or_all_of_segments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "time": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "days": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "day_part_timezones": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "relation_type": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "sizes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "add_audio": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "secure_type_lists": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "call_to_actions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "video_api_framework_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                },
                "vast_types": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Constant"
                    }
                }
            }
        },
        "Constant": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Included_Excluded_IDS": {
            "type": "object",
            "properties": {
                "included": {
                    "$ref": "#/definitions/IDS"
                },
                "excluded": {
                    "$ref": "#/definitions/IDS"
                }
            }
        },
        "IDS": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/ID"
            }
        },
        "ID": {
            "type": "number"
        },
        "Countries": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Country"
                    }
                }
            }
        },
        "Country": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "code_three_symbols": {
                    "type": "string"
                }
            }
        },
        "Regions": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Region"
                    }
                }
            }
        },
        "Region": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                }
            }
        },
        "Cities": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/City"
                    }
                }
            }
        },
        "Geo": {
            "type": "object",
            "properties": {
                "countries": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Geo_Countries"
                    }
                }
            }
        },
        "Geo_Countries": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "code_three_symbols": {
                    "type": "string"
                },
                "regions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Geo_Regions"
                    }
                }
            }
        },
        "Geo_Regions": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                },
                "region": {
                    "type": "string"
                },
                "cities": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/City"
                    }
                }
            }
        },
        "City": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Reports": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Report_Column"
                    }
                }
            }
        },
        "Report_Column": {
            "type": "object"
        },
        "Dimensions": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Dimension"
            }
        },
        "Dimension": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Columns": {
            "type": "array",
            "items": {
                "$ref": "#/definitions/Column"
            }
        },
        "Column": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "Organizations": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Organization"
                    }
                }
            }
        },
        "Organization": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Name Organizatiton."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "min_allowed_balance": {
                    "type": "number",
                    "description": "Credit.",
                    "maximum": 0,
                    "minimum": -1000000
                },
                "margin": {
                    "type": "number",
                    "description": "Margin.",
                    "minimum": 0,
                    "maximum": 1
                },
                "owner_exchange_commission": {
                    "type": "number",
                    "description": "Owner Exchange Commission.",
                    "minimum": 0,
                    "maximum": 1
                }
            }
        },
        "newOrganization": {
            "type": "object",
            "required": [
                "name",
                "active",
                "min_allowed_balance",
                "margin",
                "owner_exchange_commission",
                "alias"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name Organizatiton."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "min_allowed_balance": {
                    "type": "number",
                    "description": "Credit.",
                    "maximum": 0,
                    "minimum": -1000000
                },
                "margin": {
                    "type": "number",
                    "description": "Margin.",
                    "minimum": 0,
                    "maximum": 1
                },
                "owner_exchange_commission": {
                    "type": "number",
                    "description": "Owner Exchange Commission.",
                    "minimum": 0,
                    "maximum": 1
                },
                "alias": {
                    "type": "string",
                    "description": "Domain.",
                    "minLength": 1,
                    "maxLength": 255
                },
                "api_domain": {
                    "type": "string",
                    "description": "Api Domain.",
                    "minLength": 1,
                    "maxLength": 255
                }
            }
        },
        "Agencies": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Agency"
                    }
                }
            }
        },
        "Agency": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Name Organizatiton."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "min_allowed_balance": {
                    "type": "number",
                    "description": "Credit.",
                    "maximum": 0,
                    "minimum": -1000000
                },
                "margin": {
                    "type": "number",
                    "description": "Margin.",
                    "minimum": 0,
                    "maximum": 1
                }
            }
        },
        "newAgency": {
            "type": "object",
            "required": [
                "active",
                "name",
                "min_allowed_balance",
                "margin"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name Agency."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "min_allowed_balance": {
                    "type": "number",
                    "description": "Credit.",
                    "maximum": 0,
                    "minimum": -1000000
                },
                "margin": {
                    "type": "number",
                    "description": "Margin.",
                    "minimum": 0,
                    "maximum": 1
                }
            }
        },
        "Advertisers": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Advertiser"
                    }
                }
            }
        },
        "Advertiser": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Name Organizatiton."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "min_allowed_balance": {
                    "type": "number",
                    "description": "Credit.",
                    "maximum": 0,
                    "minimum": -1000000
                },
                "margin": {
                    "type": "number",
                    "description": "Margin.",
                    "minimum": 0,
                    "maximum": 1
                },
                "commission": {
                    "type": "number",
                    "description": "Baked-in commission.",
                    "minimum": 0,
                    "maximum": 1
                }
            }
        },
        "newAdvertiser": {
            "type": "object",
            "required": [
                "active",
                "name",
                "min_allowed_balance",
                "margin",
                "commission"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name Organizatiton."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. Required. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "min_allowed_balance": {
                    "type": "number",
                    "description": "Credit.",
                    "maximum": 0,
                    "minimum": -1000000
                },
                "margin": {
                    "type": "number",
                    "description": "Margin.",
                    "minimum": 0,
                    "maximum": 1
                },
                "commission": {
                    "type": "number",
                    "description": "Baked-in commission.",
                    "minimum": 0,
                    "maximum": 1
                }
            }
        },
        "Users": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/User"
                    }
                }
            }
        },
        "User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "email": {
                    "type": "string",
                    "description": "Email."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "username": {
                    "type": "string",
                    "description": "Username."
                }
            }
        },
        "newUser": {
            "type": "object",
            "required": [
                "active",
                "name",
                "email",
                "username"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "email": {
                    "type": "string",
                    "description": "Email."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "username": {
                    "type": "string",
                    "description": "Username."
                },
                "password": {
                    "type": "string",
                    "description": "Password."
                },
                "Permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "Resources": {
                    "type": "object",
                    "items": {
                        "$ref": "#/definitions/Resource"
                    }
                }
            }
        },
        "editUser": {
            "type": "object",
            "required": [
                "active",
                "name",
                "email",
                "username"
            ],
            "properties": {
                "name": {
                    "type": "string",
                    "description": "Name."
                },
                "email": {
                    "type": "string",
                    "description": "Email."
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "username": {
                    "type": "string",
                    "description": "Username."
                },
                "password": {
                    "type": "string",
                    "description": "Password."
                },
                "Permissions": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                },
                "Resources": {
                    "type": "object",
                    "items": {
                        "$ref": "#/definitions/Resource"
                    }
                }
            }
        },
        "Permissions": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Permission"
                    }
                }
            }
        },
        "Permission": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "Pemission id. One of the ID values of parameter `permissions` in /constants is added to this parameter."
                },
                "access": {
                    "type": "string",
                    "description": "Access.",
                    "enum": [
                        "edit",
                        "view"
                    ]
                }
            }
        },
        "Resources": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Resource"
                    }
                }
            }
        },
        "Resource": {
            "type": "object",
            "properties": {
                "organizations": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/OrganizaionR"
                    }
                },
                "agencies": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AgencyR"
                    }
                },
                "advertisers": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/AdvertiserR"
                    }
                }
            }
        },
        "OrganizaionR": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "ID Organizaion."
                }
            }
        },
        "AgencyR": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "ID Agency."
                },
                "organization_id": {
                    "type": "number",
                    "description": "ID Organizaion."
                }
            }
        },
        "AdvertiserR": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number",
                    "description": "ID Advertiser."
                },
                "agency_id": {
                    "type": "number",
                    "description": "ID Agency."
                },
                "organization_id": {
                    "type": "number",
                    "description": "ID Organizaion."
                }
            }
        },
        "DataImports": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/DataImport"
                    }
                }
            }
        },
        "DataImport": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "number"
                },
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "ssp_id": {
                    "type": "number",
                    "description": "Ssp ID."
                },
                "recurring_import": {
                    "type": "number",
                    "description": "Recurring Import.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "device_based": {
                    "type": "number",
                    "description": "Device Based.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "data_storage": {
                    "type": "number",
                    "description": "Data Storage.  Status. One of the ID values of parameter `data_storages` in /constants is added to this parameter."
                },
                "bucket": {
                    "type": "string",
                    "description": "Object Path. Used if data_storage = 1(S3 in data_storages)."
                },
                "object_path": {
                    "type": "string",
                    "description": "Object Path. If data_storage = 1(S3 in data_storages) - Required."
                },
                "access_key": {
                    "type": "string",
                    "description": "Access key. If data_storage = 1(S3 in data_storages) - Required."
                },
                "secret_key": {
                    "type": "string",
                    "description": "Secret key. If data_storage = 1(S3 in data_storages) - Required."
                },
                "move_to_processed_dir": {
                    "type": "number",
                    "description": "Move to processed dir after import. If data_storage = 1(S3 in data_storages) - Required",
                    "enum": [
                        0,
                        1
                    ]
                },
                "public_url": {
                    "type": "string",
                    "description": "Public Url. If data_storage = 2(URL in data_storages) - Required."
                }
            }
        },
        "newDataImport": {
            "type": "object",
            "required": [
                "active",
                "ssp_id",
                "data_storage"
            ],
            "properties": {
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "ssp_id": {
                    "type": "number",
                    "description": "Ssp ID."
                },
                "recurring_import": {
                    "type": "number",
                    "description": "Recurring Import.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "device_based": {
                    "type": "number",
                    "description": "Device Based.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "data_storage": {
                    "type": "number",
                    "description": "Data Storage.  Status. One of the ID values of parameter `data_storages` in /constants is added to this parameter."
                },
                "bucket": {
                    "type": "string",
                    "description": "Object Path. Used if data_storage = 1(S3 in data_storages)."
                },
                "object_path": {
                    "type": "string",
                    "description": "Object Path. If data_storage = 1(S3 in data_storages) - Required."
                },
                "access_key": {
                    "type": "string",
                    "description": "Access key. If data_storage = 1(S3 in data_storages) - Required."
                },
                "secret_key": {
                    "type": "string",
                    "description": "Secret key. If data_storage = 1(S3 in data_storages) - Required."
                },
                "move_to_processed_dir": {
                    "type": "number",
                    "description": "Move to processed dir after import. If data_storage = 1(S3 in data_storages) - Required",
                    "enum": [
                        0,
                        1
                    ]
                },
                "public_url": {
                    "type": "string",
                    "description": "Public Url. If data_storage = 2(URL in data_storages) - Required."
                }
            }
        },
        "editDataImport": {
            "type": "object",
            "required": [
                "data_storage"
            ],
            "properties": {
                "active": {
                    "type": "number",
                    "description": "Status. 1 - Active, 0 - Pause. One of the ID values of parameter `statuses` in /constants is added to this parameter.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "ssp_id": {
                    "type": "number",
                    "description": "Ssp ID."
                },
                "recurring_import": {
                    "type": "number",
                    "description": "Recurring Import.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "device_based": {
                    "type": "number",
                    "description": "Device Based.",
                    "enum": [
                        0,
                        1
                    ]
                },
                "data_storage": {
                    "type": "number",
                    "description": "Data Storage.  Status. One of the ID values of parameter `data_storages` in /constants is added to this parameter."
                },
                "bucket": {
                    "type": "string",
                    "description": "Object Path. Used if data_storage = 1(S3 in data_storages)."
                },
                "object_path": {
                    "type": "string",
                    "description": "Object Path. If data_storage = 1(S3 in data_storages) - Required."
                },
                "access_key": {
                    "type": "string",
                    "description": "Access key. If data_storage = 1(S3 in data_storages) - Required."
                },
                "secret_key": {
                    "type": "string",
                    "description": "Secret key. If data_storage = 1(S3 in data_storages) - Required."
                },
                "move_to_processed_dir": {
                    "type": "number",
                    "description": "Move to processed dir after import. If data_storage = 1(S3 in data_storages) - Required",
                    "enum": [
                        0,
                        1
                    ]
                },
                "public_url": {
                    "type": "string",
                    "description": "Public Url. If data_storage = 2(URL in data_storages) - Required."
                }
            }
        },
        "Changes": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/Change"
                    }
                }
            }
        },
        "Change": {
            "type": "object",
            "properties": {
                "user_id": {
                    "type": "number",
                    "description": "User ID."
                },
                "request_id": {
                    "type": "number",
                    "description": "Request ID."
                },
                "time": {
                    "type": "string",
                    "format": "dateTime",
                    "description": "Time of change."
                },
                "action": {
                    "type": "string",
                    "description": "Action name."
                },
                "parent": {
                    "type": "string",
                    "description": "Parent object name."
                },
                "parent_id": {
                    "type": "number",
                    "description": "Parent object ID."
                },
                "object": {
                    "type": "string",
                    "description": "Object name."
                },
                "object_id": {
                    "type": "number",
                    "description": "Object ID."
                },
                "field": {
                    "type": "string",
                    "description": "Object field."
                },
                "old_value": {
                    "type": "string",
                    "description": "Object field old value."
                },
                "new_value": {
                    "type": "string",
                    "description": "Object field new value."
                },
                "ip": {
                    "type": "string",
                    "description": "User IP."
                },
                "location": {
                    "type": "string",
                    "description": "User Location."
                },
                "os": {
                    "type": "string",
                    "description": "User OS (Android, Linux, OS X, Windows, Windows Phone, iOS, Unknown)."
                },
                "browser": {
                    "type": "string",
                    "description": "User browser (Chrome, Firefox, IE, Opera, Safari, Unknown)."
                }
            }
        },
        "HistoryObjects": {
            "type": "object",
            "properties": {
                "count": {
                    "type": "number"
                },
                "data": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                }
            }
        }
    }
}